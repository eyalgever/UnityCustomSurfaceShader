// Compiled shader for custom platforms

//////////////////////////////////////////////////////////////////////////
// 
// NOTE: This is *not* a valid shader file, the contents are provided just
// for information and for debugging purposes only.
// 
//////////////////////////////////////////////////////////////////////////
// Skipping shader variants that would not be included into build of current scene.

Shader "Custom/Surface/SimpleSurface" {
Properties {
 _BaseColor ("BaseColor", Color) = (1.000000,1.000000,1.000000,1.000000)
 _Glossiness ("Smoothness", Range(0.000000,1.000000)) = 0.500000
 _Metallic ("Metallic", Range(0.000000,1.000000)) = 0.000000
}
SubShader { 
 LOD 200
 Tags { "RenderType"="Opaque" }


 // Stats for Vertex shader:
 //        d3d11: 25 avg math (16..47)
 // Stats for Fragment shader:
 //        d3d11: 129 avg math (81..169), 2 avg texture (1..5), 5 avg branch (4..8)
 Pass {
  Name "FORWARD"
  Tags { "LIGHTMODE"="FORWARDBASE" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL 
-- Vertex shader for "d3d11":
// Stats: 22 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"

Constant Buffer "UnityLighting" (752 bytes) on slot 0 {
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xy          4     NONE   float   xy  
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[45], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xy
      dcl_output o5.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb2[18].xyzw
   6: mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
   8: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
   9: dp3 r0.x, v2.xyzx, cb1[4].xyzx
  10: dp3 r0.y, v2.xyzx, cb1[5].xyzx
  11: dp3 r0.z, v2.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r0.xyzx, r0.xyzx
  13: rsq r0.w, r0.w
  14: mul r0.xyz, r0.wwww, r0.xyzx
  15: mov o1.xyz, r0.xyzx
  16: mul r0.w, r0.y, r0.y
  17: mad r0.w, r0.x, r0.x, -r0.w
  18: mul r1.xyzw, r0.yzzx, r0.xyzz
  19: dp4 r0.x, cb0[41].xyzw, r1.xyzw
  20: dp4 r0.y, cb0[42].xyzw, r1.xyzw
  21: dp4 r0.z, cb0[43].xyzw, r1.xyzw
  22: mad o3.xyz, cb0[44].xyzx, r0.wwww, r0.xyzx
  23: mov o4.xy, l(0,0,0,0)
  24: mov o5.xyzw, l(0,0,0,0)
  25: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 159 math, 11 temp registers, 4 textures, 8 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set CUBE Texture "unity_SpecCube1" to slot 1 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 1

Constant Buffer "$Globals" (96 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _BaseColor at 64
  Float _Glossiness at 80
  Float _Metallic at 84
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 3 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 4 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xy          4     NONE   float       
// TEXCOORD                 5   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[8], immediateIndexed
      dcl_constantbuffer CB4[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texturecube (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_output o0.xyzw
      dcl_temps 11
   0: add r0.xyz, -v2.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: eq r1.w, cb4[0].x, l(1.000000)
   5: if_nz r1.w
   6:   eq r2.x, cb4[0].y, l(1.000000)
   7:   mul r2.yzw, v2.yyyy, cb4[2].xxyz
   8:   mad r2.yzw, cb4[1].xxyz, v2.xxxx, r2.yyzw
   9:   mad r2.yzw, cb4[3].xxyz, v2.zzzz, r2.yyzw
  10:   add r2.yzw, r2.yyzw, cb4[4].xxyz
  11:   movc r2.xyz, r2.xxxx, r2.yzwy, v2.xyzx
  12:   add r2.xyz, r2.xyzx, -cb4[6].xyzx
  13:   mul r2.yzw, r2.xxyz, cb4[5].xxyz
  14:   mad r2.y, r2.y, l(0.250000), l(0.750000)
  15:   mad r3.x, cb4[0].z, l(0.500000), l(0.750000)
  16:   max r2.x, r2.y, r3.x
  17:   sample r2.xyzw, r2.xzwx, t2.xyzw, s1
  18: else 
  19:   mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  20: endif 
  21: dp4_sat r2.x, r2.xyzw, cb2[45].xyzw
  22: add r2.y, -cb0[5].x, l(1.000000)
  23: dp3 r2.z, -r1.xyzx, v1.xyzx
  24: add r2.z, r2.z, r2.z
  25: mad r3.xyz, v1.xyzx, -r2.zzzz, -r1.xyzx
  26: mul r2.xzw, r2.xxxx, cb0[2].xxyz
  27: if_nz r1.w
  28:   eq r1.w, cb4[0].y, l(1.000000)
  29:   mul r4.xyz, v2.yyyy, cb4[2].xyzx
  30:   mad r4.xyz, cb4[1].xyzx, v2.xxxx, r4.xyzx
  31:   mad r4.xyz, cb4[3].xyzx, v2.zzzz, r4.xyzx
  32:   add r4.xyz, r4.xyzx, cb4[4].xyzx
  33:   movc r4.xyz, r1.wwww, r4.xyzx, v2.xyzx
  34:   add r4.xyz, r4.xyzx, -cb4[6].xyzx
  35:   mul r4.yzw, r4.xxyz, cb4[5].xxyz
  36:   mul r1.w, r4.y, l(0.250000)
  37:   mul r3.w, cb4[0].z, l(0.500000)
  38:   mad r4.y, -cb4[0].z, l(0.500000), l(0.250000)
  39:   max r1.w, r1.w, r3.w
  40:   min r4.x, r4.y, r1.w
  41:   sample r5.xyzw, r4.xzwx, t2.xyzw, s1
  42:   add r6.xyz, r4.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  43:   sample r6.xyzw, r6.xyzx, t2.xyzw, s1
  44:   add r4.xyz, r4.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  45:   sample r4.xyzw, r4.xyzx, t2.xyzw, s1
  46:   mov r7.xyz, v1.xyzx
  47:   mov r7.w, l(1.000000)
  48:   dp4 r5.x, r5.xyzw, r7.xyzw
  49:   dp4 r5.y, r6.xyzw, r7.xyzw
  50:   dp4 r5.z, r4.xyzw, r7.xyzw
  51: else 
  52:   mov r4.xyz, v1.xyzx
  53:   mov r4.w, l(1.000000)
  54:   dp4 r5.x, cb2[38].xyzw, r4.xyzw
  55:   dp4 r5.y, cb2[39].xyzw, r4.xyzw
  56:   dp4 r5.z, cb2[40].xyzw, r4.xyzw
  57: endif 
  58: add r4.xyz, r5.xyzx, v3.xyzx
  59: max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  60: lt r1.w, l(0.000000), cb3[2].w
  61: if_nz r1.w
  62:   dp3 r1.w, r3.xyzx, r3.xyzx
  63:   rsq r1.w, r1.w
  64:   mul r5.xyz, r1.wwww, r3.xyzx
  65:   add r6.xyz, -v2.xyzx, cb3[0].xyzx
  66:   div r6.xyz, r6.xyzx, r5.xyzx
  67:   add r7.xyz, -v2.xyzx, cb3[1].xyzx
  68:   div r7.xyz, r7.xyzx, r5.xyzx
  69:   lt r8.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r5.xyzx
  70:   movc r6.xyz, r8.xyzx, r6.xyzx, r7.xyzx
  71:   min r1.w, r6.y, r6.x
  72:   min r1.w, r6.z, r1.w
  73:   add r6.xyz, v2.xyzx, -cb3[2].xyzx
  74:   mad r5.xyz, r5.xyzx, r1.wwww, r6.xyzx
  75: else 
  76:   mov r5.xyz, r3.xyzx
  77: endif 
  78: mad r1.w, -r2.y, l(0.700000), l(1.700000)
  79: mul r1.w, r1.w, r2.y
  80: mul r1.w, r1.w, l(6.000000)
  81: sample_l r5.xyzw, r5.xyzx, t0.xyzw, s0, r1.w
  82: add r3.w, r5.w, l(-1.000000)
  83: mad r3.w, cb3[3].w, r3.w, l(1.000000)
  84: log r3.w, r3.w
  85: mul r3.w, r3.w, cb3[3].y
  86: exp r3.w, r3.w
  87: mul r3.w, r3.w, cb3[3].x
  88: mul r6.xyz, r5.xyzx, r3.wwww
  89: lt r4.w, cb3[1].w, l(0.999990)
  90: if_nz r4.w
  91:   lt r4.w, l(0.000000), cb3[6].w
  92:   if_nz r4.w
  93:     dp3 r4.w, r3.xyzx, r3.xyzx
  94:     rsq r4.w, r4.w
  95:     mul r7.xyz, r3.xyzx, r4.wwww
  96:     add r8.xyz, -v2.xyzx, cb3[4].xyzx
  97:     div r8.xyz, r8.xyzx, r7.xyzx
  98:     add r9.xyz, -v2.xyzx, cb3[5].xyzx
  99:     div r9.xyz, r9.xyzx, r7.xyzx
 100:     lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
 101:     movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
 102:     min r4.w, r8.y, r8.x
 103:     min r4.w, r8.z, r4.w
 104:     add r8.xyz, v2.xyzx, -cb3[6].xyzx
 105:     mad r3.xyz, r7.xyzx, r4.wwww, r8.xyzx
 106:   endif 
 107:   sample_l r7.xyzw, r3.xyzx, t1.xyzw, s0, r1.w
 108:   add r1.w, r7.w, l(-1.000000)
 109:   mad r1.w, cb3[7].w, r1.w, l(1.000000)
 110:   log r1.w, r1.w
 111:   mul r1.w, r1.w, cb3[7].y
 112:   exp r1.w, r1.w
 113:   mul r1.w, r1.w, cb3[7].x
 114:   mul r3.xyz, r7.xyzx, r1.wwww
 115:   mad r5.xyz, r3.wwww, r5.xyzx, -r3.xyzx
 116:   mad r6.xyz, cb3[1].wwww, r5.xyzx, r3.xyzx
 117: endif 
 118: dp3 r1.w, v1.xyzx, v1.xyzx
 119: rsq r1.w, r1.w
 120: mul r3.xyz, r1.wwww, v1.xyzx
 121: add r5.xyz, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
 122: mad r5.xyz, cb0[5].yyyy, r5.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
 123: mad r1.w, -cb0[5].y, l(0.960000), l(0.960000)
 124: mul r7.xyz, r1.wwww, cb0[4].xyzx
 125: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
 126: dp3 r0.w, r0.xyzx, r0.xyzx
 127: max r0.w, r0.w, l(0.001000)
 128: rsq r0.w, r0.w
 129: mul r0.xyz, r0.wwww, r0.xyzx
 130: dp3 r0.w, r3.xyzx, r1.xyzx
 131: dp3_sat r1.x, r3.xyzx, cb2[0].xyzx
 132: dp3_sat r1.y, r3.xyzx, r0.xyzx
 133: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
 134: mul r0.y, r0.x, r0.x
 135: dp2 r0.y, r0.yyyy, r2.yyyy
 136: add r0.y, r0.y, l(-0.500000)
 137: add r0.z, -r1.x, l(1.000000)
 138: mul r1.z, r0.z, r0.z
 139: mul r1.z, r1.z, r1.z
 140: mul r0.z, r0.z, r1.z
 141: mad r0.z, r0.y, r0.z, l(1.000000)
 142: add r1.z, -|r0.w|, l(1.000000)
 143: mul r3.x, r1.z, r1.z
 144: mul r3.x, r3.x, r3.x
 145: mul r1.z, r1.z, r3.x
 146: mad r0.y, r0.y, r1.z, l(1.000000)
 147: mul r0.y, r0.y, r0.z
 148: mul r0.z, r2.y, r2.y
 149: mad r2.y, -r2.y, r2.y, l(1.000000)
 150: mad r3.x, |r0.w|, r2.y, r0.z
 151: mad r2.y, r1.x, r2.y, r0.z
 152: mul r0.w, |r0.w|, r2.y
 153: mad r0.w, r1.x, r3.x, r0.w
 154: add r0.w, r0.w, l(0.000010)
 155: div r0.w, l(0.500000), r0.w
 156: mul r2.y, r0.z, r0.z
 157: mad r3.x, r1.y, r2.y, -r1.y
 158: mad r1.y, r3.x, r1.y, l(1.000000)
 159: mul r2.y, r2.y, l(0.318310)
 160: mad r1.y, r1.y, r1.y, l(0.000000)
 161: div r1.y, r2.y, r1.y
 162: mul r0.w, r0.w, r1.y
 163: mul r0.w, r0.w, l(3.141593)
 164: mul r0.yw, r1.xxxx, r0.yyyw
 165: max r0.w, r0.w, l(0.000000)
 166: mad r0.z, r0.z, r0.z, l(1.000000)
 167: div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
 168: dp3 r1.x, r5.xyzx, r5.xyzx
 169: ne r1.x, r1.x, l(0.000000)
 170: and r1.x, r1.x, l(0x3f800000)
 171: mul r0.w, r0.w, r1.x
 172: add r1.x, -r1.w, cb0[5].x
 173: add_sat r1.x, r1.x, l(1.000000)
 174: mad r3.xyz, r2.xzwx, r0.yyyy, r4.xyzx
 175: mul r2.xyz, r2.xzwx, r0.wwww
 176: add r0.x, -r0.x, l(1.000000)
 177: mul r0.y, r0.x, r0.x
 178: mul r0.y, r0.y, r0.y
 179: mul r0.x, r0.x, r0.y
 180: add r4.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 181: mad r0.xyw, r4.xyxz, r0.xxxx, r5.xyxz
 182: mul r0.xyw, r0.xyxw, r2.xyxz
 183: mad r0.xyw, r7.xyxz, r3.xyxz, r0.xyxw
 184: mul r2.xyz, r6.xyzx, r0.zzzz
 185: add r1.xyw, -r5.xyxz, r1.xxxx
 186: mad r1.xyz, r1.zzzz, r1.xywx, r5.xyzx
 187: mad o0.xyz, r2.xyzx, r1.xyzx, r0.xywx
 188: mov o0.w, l(1.000000)
 189: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL LIGHTMAP_ON 
-- Vertex shader for "d3d11":
// Stats: 16 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord0"

Constant Buffer "UnityPerDraw" (160 bytes) on slot 0 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 1 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 2 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xy          4     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[21], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb0[1].xyzw
   1: mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb0[3].xyzw
   4: mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb1[18].xyzw
   6: mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
   8: mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
   9: dp3 r0.x, v2.xyzx, cb0[4].xyzx
  10: dp3 r0.y, v2.xyzx, cb0[5].xyzx
  11: dp3 r0.z, v2.xyzx, cb0[6].xyzx
  12: dp3 r0.w, r0.xyzx, r0.xyzx
  13: rsq r0.w, r0.w
  14: mul o1.xyz, r0.wwww, r0.xyzx
  15: mad o3.xy, v4.xyxx, cb2[0].xyxx, cb2[0].zwzz
  16: mov o3.zw, l(0,0,0,0)
  17: mov o4.xy, l(0,0,0,0)
  18: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 129 math, 10 temp registers, 1 textures, 4 branches
Set 2D Texture "unity_Lightmap" to slot 0
Set CUBE Texture "unity_SpecCube0" to slot 1
Set CUBE Texture "unity_SpecCube1" to slot 2 sampler slot -1

Constant Buffer "$Globals" (96 bytes) on slot 0 {
  Vector4 unity_Lightmap_HDR at 0
  Vector4 _LightColor0 at 32
  Vector4 _BaseColor at 64
  Float _Glossiness at 80
  Float _Metallic at 84
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 3 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
// TEXCOORD                 3   xy          4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[8], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texturecube (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xy
      dcl_output o0.xyzw
      dcl_temps 10
   0: add r0.xyz, -v2.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r1.w, -cb0[5].x, l(1.000000)
   5: dp3 r2.x, -r1.xyzx, v1.xyzx
   6: add r2.x, r2.x, r2.x
   7: mad r2.xyz, v1.xyzx, -r2.xxxx, -r1.xyzx
   8: sample r3.xyzw, v3.xyxx, t0.xyzw, s0
   9: log r2.w, r3.w
  10: mul r2.w, r2.w, cb0[0].y
  11: exp r2.w, r2.w
  12: mul r2.w, r2.w, cb0[0].x
  13: lt r3.w, l(0.000000), cb3[2].w
  14: if_nz r3.w
  15:   dp3 r3.w, r2.xyzx, r2.xyzx
  16:   rsq r3.w, r3.w
  17:   mul r4.xyz, r2.xyzx, r3.wwww
  18:   add r5.xyz, -v2.xyzx, cb3[0].xyzx
  19:   div r5.xyz, r5.xyzx, r4.xyzx
  20:   add r6.xyz, -v2.xyzx, cb3[1].xyzx
  21:   div r6.xyz, r6.xyzx, r4.xyzx
  22:   lt r7.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r4.xyzx
  23:   movc r5.xyz, r7.xyzx, r5.xyzx, r6.xyzx
  24:   min r3.w, r5.y, r5.x
  25:   min r3.w, r5.z, r3.w
  26:   add r5.xyz, v2.xyzx, -cb3[2].xyzx
  27:   mad r4.xyz, r4.xyzx, r3.wwww, r5.xyzx
  28: else 
  29:   mov r4.xyz, r2.xyzx
  30: endif 
  31: mad r3.w, -r1.w, l(0.700000), l(1.700000)
  32: mul r3.w, r1.w, r3.w
  33: mul r3.w, r3.w, l(6.000000)
  34: sample_l r4.xyzw, r4.xyzx, t1.xyzw, s1, r3.w
  35: add r4.w, r4.w, l(-1.000000)
  36: mad r4.w, cb3[3].w, r4.w, l(1.000000)
  37: log r4.w, r4.w
  38: mul r4.w, r4.w, cb3[3].y
  39: exp r4.w, r4.w
  40: mul r4.w, r4.w, cb3[3].x
  41: mul r5.xyz, r4.xyzx, r4.wwww
  42: lt r5.w, cb3[1].w, l(0.999990)
  43: if_nz r5.w
  44:   lt r5.w, l(0.000000), cb3[6].w
  45:   if_nz r5.w
  46:     dp3 r5.w, r2.xyzx, r2.xyzx
  47:     rsq r5.w, r5.w
  48:     mul r6.xyz, r2.xyzx, r5.wwww
  49:     add r7.xyz, -v2.xyzx, cb3[4].xyzx
  50:     div r7.xyz, r7.xyzx, r6.xyzx
  51:     add r8.xyz, -v2.xyzx, cb3[5].xyzx
  52:     div r8.xyz, r8.xyzx, r6.xyzx
  53:     lt r9.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
  54:     movc r7.xyz, r9.xyzx, r7.xyzx, r8.xyzx
  55:     min r5.w, r7.y, r7.x
  56:     min r5.w, r7.z, r5.w
  57:     add r7.xyz, v2.xyzx, -cb3[6].xyzx
  58:     mad r2.xyz, r6.xyzx, r5.wwww, r7.xyzx
  59:   endif 
  60:   sample_l r6.xyzw, r2.xyzx, t2.xyzw, s1, r3.w
  61:   add r2.x, r6.w, l(-1.000000)
  62:   mad r2.x, cb3[7].w, r2.x, l(1.000000)
  63:   log r2.x, r2.x
  64:   mul r2.x, r2.x, cb3[7].y
  65:   exp r2.x, r2.x
  66:   mul r2.x, r2.x, cb3[7].x
  67:   mul r2.xyz, r6.xyzx, r2.xxxx
  68:   mad r4.xyz, r4.wwww, r4.xyzx, -r2.xyzx
  69:   mad r5.xyz, cb3[1].wwww, r4.xyzx, r2.xyzx
  70: endif 
  71: dp3 r2.x, v1.xyzx, v1.xyzx
  72: rsq r2.x, r2.x
  73: mul r2.xyz, r2.xxxx, v1.xyzx
  74: add r4.xyz, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
  75: mad r4.xyz, cb0[5].yyyy, r4.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
  76: mad r3.w, -cb0[5].y, l(0.960000), l(0.960000)
  77: mul r6.xyz, r3.wwww, cb0[4].xyzx
  78: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
  79: dp3 r0.w, r0.xyzx, r0.xyzx
  80: max r0.w, r0.w, l(0.001000)
  81: rsq r0.w, r0.w
  82: mul r0.xyz, r0.wwww, r0.xyzx
  83: dp3 r0.w, r2.xyzx, r1.xyzx
  84: dp3_sat r1.x, r2.xyzx, cb2[0].xyzx
  85: dp3_sat r1.y, r2.xyzx, r0.xyzx
  86: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
  87: mul r0.y, r0.x, r0.x
  88: dp2 r0.y, r0.yyyy, r1.wwww
  89: add r0.y, r0.y, l(-0.500000)
  90: add r0.z, -r1.x, l(1.000000)
  91: mul r1.z, r0.z, r0.z
  92: mul r1.z, r1.z, r1.z
  93: mul r0.z, r0.z, r1.z
  94: mad r0.z, r0.y, r0.z, l(1.000000)
  95: add r1.z, -|r0.w|, l(1.000000)
  96: mul r2.x, r1.z, r1.z
  97: mul r2.x, r2.x, r2.x
  98: mul r1.z, r1.z, r2.x
  99: mad r0.y, r0.y, r1.z, l(1.000000)
 100: mul r0.y, r0.y, r0.z
 101: mul r0.z, r1.w, r1.w
 102: mad r1.w, -r1.w, r1.w, l(1.000000)
 103: mad r2.x, |r0.w|, r1.w, r0.z
 104: mad r1.w, r1.x, r1.w, r0.z
 105: mul r0.w, |r0.w|, r1.w
 106: mad r0.w, r1.x, r2.x, r0.w
 107: add r0.w, r0.w, l(0.000010)
 108: div r0.w, l(0.500000), r0.w
 109: mul r1.w, r0.z, r0.z
 110: mad r2.x, r1.y, r1.w, -r1.y
 111: mad r1.y, r2.x, r1.y, l(1.000000)
 112: mul r1.w, r1.w, l(0.318310)
 113: mad r1.y, r1.y, r1.y, l(0.000000)
 114: div r1.y, r1.w, r1.y
 115: mul r0.w, r0.w, r1.y
 116: mul r0.w, r0.w, l(3.141593)
 117: mul r0.yw, r1.xxxx, r0.yyyw
 118: max r0.w, r0.w, l(0.000000)
 119: mad r0.z, r0.z, r0.z, l(1.000000)
 120: div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
 121: dp3 r1.x, r4.xyzx, r4.xyzx
 122: ne r1.x, r1.x, l(0.000000)
 123: and r1.x, r1.x, l(0x3f800000)
 124: mul r0.w, r0.w, r1.x
 125: add r1.x, -r3.w, cb0[5].x
 126: add_sat r1.x, r1.x, l(1.000000)
 127: mul r2.xyz, r0.yyyy, cb0[2].xyzx
 128: mad r2.xyz, r2.wwww, r3.xyzx, r2.xyzx
 129: mul r3.xyz, r0.wwww, cb0[2].xyzx
 130: add r0.x, -r0.x, l(1.000000)
 131: mul r0.y, r0.x, r0.x
 132: mul r0.y, r0.y, r0.y
 133: mul r0.x, r0.x, r0.y
 134: add r7.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 135: mad r0.xyw, r7.xyxz, r0.xxxx, r4.xyxz
 136: mul r0.xyw, r0.xyxw, r3.xyxz
 137: mad r0.xyw, r6.xyxz, r2.xyxz, r0.xyxw
 138: mul r2.xyz, r5.xyzx, r0.zzzz
 139: add r1.xyw, -r4.xyxz, r1.xxxx
 140: mad r1.xyz, r1.zzzz, r1.xywx, r4.xyzx
 141: mad o0.xyz, r2.xyzx, r1.xyzx, r0.xywx
 142: mov o0.w, l(1.000000)
 143: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL LIGHTMAP_ON LIGHTMAP_SHADOW_MIXING 
-- Vertex shader for "d3d11":
// Stats: 16 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord0"

Constant Buffer "UnityPerDraw" (160 bytes) on slot 0 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 1 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 2 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xy          4     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[21], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb0[1].xyzw
   1: mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb0[3].xyzw
   4: mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb1[18].xyzw
   6: mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
   8: mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
   9: dp3 r0.x, v2.xyzx, cb0[4].xyzx
  10: dp3 r0.y, v2.xyzx, cb0[5].xyzx
  11: dp3 r0.z, v2.xyzx, cb0[6].xyzx
  12: dp3 r0.w, r0.xyzx, r0.xyzx
  13: rsq r0.w, r0.w
  14: mul o1.xyz, r0.wwww, r0.xyzx
  15: mad o3.xy, v4.xyxx, cb2[0].xyxx, cb2[0].zwzz
  16: mov o3.zw, l(0,0,0,0)
  17: mov o4.xy, l(0,0,0,0)
  18: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 81 math, 9 temp registers, 1 textures, 4 branches
Set 2D Texture "unity_Lightmap" to slot 0
Set CUBE Texture "unity_SpecCube0" to slot 1
Set CUBE Texture "unity_SpecCube1" to slot 2 sampler slot -1

Constant Buffer "$Globals" (96 bytes) on slot 0 {
  Vector4 unity_Lightmap_HDR at 0
  Vector4 _BaseColor at 64
  Float _Glossiness at 80
  Float _Metallic at 84
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
// TEXCOORD                 3   xy          4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[8], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texturecube (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xy
      dcl_output o0.xyzw
      dcl_temps 9
   0: add r0.xyz, -v2.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r0.xyz, r0.wwww, r0.xyzx
   4: add r0.w, -cb0[5].x, l(1.000000)
   5: dp3 r1.x, -r0.xyzx, v1.xyzx
   6: add r1.x, r1.x, r1.x
   7: mad r1.xyz, v1.xyzx, -r1.xxxx, -r0.xyzx
   8: sample r2.xyzw, v3.xyxx, t0.xyzw, s0
   9: log r1.w, r2.w
  10: mul r1.w, r1.w, cb0[0].y
  11: exp r1.w, r1.w
  12: mul r1.w, r1.w, cb0[0].x
  13: mul r2.xyz, r2.xyzx, r1.wwww
  14: lt r1.w, l(0.000000), cb2[2].w
  15: if_nz r1.w
  16:   dp3 r1.w, r1.xyzx, r1.xyzx
  17:   rsq r1.w, r1.w
  18:   mul r3.xyz, r1.wwww, r1.xyzx
  19:   add r4.xyz, -v2.xyzx, cb2[0].xyzx
  20:   div r4.xyz, r4.xyzx, r3.xyzx
  21:   add r5.xyz, -v2.xyzx, cb2[1].xyzx
  22:   div r5.xyz, r5.xyzx, r3.xyzx
  23:   lt r6.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r3.xyzx
  24:   movc r4.xyz, r6.xyzx, r4.xyzx, r5.xyzx
  25:   min r1.w, r4.y, r4.x
  26:   min r1.w, r4.z, r1.w
  27:   add r4.xyz, v2.xyzx, -cb2[2].xyzx
  28:   mad r3.xyz, r3.xyzx, r1.wwww, r4.xyzx
  29: else 
  30:   mov r3.xyz, r1.xyzx
  31: endif 
  32: mad r1.w, -r0.w, l(0.700000), l(1.700000)
  33: mul r1.w, r0.w, r1.w
  34: mul r1.w, r1.w, l(6.000000)
  35: sample_l r3.xyzw, r3.xyzx, t1.xyzw, s1, r1.w
  36: add r2.w, r3.w, l(-1.000000)
  37: mad r2.w, cb2[3].w, r2.w, l(1.000000)
  38: log r2.w, r2.w
  39: mul r2.w, r2.w, cb2[3].y
  40: exp r2.w, r2.w
  41: mul r2.w, r2.w, cb2[3].x
  42: mul r4.xyz, r3.xyzx, r2.wwww
  43: lt r3.w, cb2[1].w, l(0.999990)
  44: if_nz r3.w
  45:   lt r3.w, l(0.000000), cb2[6].w
  46:   if_nz r3.w
  47:     dp3 r3.w, r1.xyzx, r1.xyzx
  48:     rsq r3.w, r3.w
  49:     mul r5.xyz, r1.xyzx, r3.wwww
  50:     add r6.xyz, -v2.xyzx, cb2[4].xyzx
  51:     div r6.xyz, r6.xyzx, r5.xyzx
  52:     add r7.xyz, -v2.xyzx, cb2[5].xyzx
  53:     div r7.xyz, r7.xyzx, r5.xyzx
  54:     lt r8.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r5.xyzx
  55:     movc r6.xyz, r8.xyzx, r6.xyzx, r7.xyzx
  56:     min r3.w, r6.y, r6.x
  57:     min r3.w, r6.z, r3.w
  58:     add r6.xyz, v2.xyzx, -cb2[6].xyzx
  59:     mad r1.xyz, r5.xyzx, r3.wwww, r6.xyzx
  60:   endif 
  61:   sample_l r1.xyzw, r1.xyzx, t2.xyzw, s1, r1.w
  62:   add r1.w, r1.w, l(-1.000000)
  63:   mad r1.w, cb2[7].w, r1.w, l(1.000000)
  64:   log r1.w, r1.w
  65:   mul r1.w, r1.w, cb2[7].y
  66:   exp r1.w, r1.w
  67:   mul r1.w, r1.w, cb2[7].x
  68:   mul r1.xyz, r1.xyzx, r1.wwww
  69:   mad r3.xyz, r2.wwww, r3.xyzx, -r1.xyzx
  70:   mad r4.xyz, cb2[1].wwww, r3.xyzx, r1.xyzx
  71: endif 
  72: dp3 r1.x, v1.xyzx, v1.xyzx
  73: rsq r1.x, r1.x
  74: mul r1.xyz, r1.xxxx, v1.xyzx
  75: add r3.xyz, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
  76: mad r3.xyz, cb0[5].yyyy, r3.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
  77: mad r1.w, -cb0[5].y, l(0.960000), l(0.960000)
  78: mul r5.xyz, r1.wwww, cb0[4].xyzx
  79: dp3 r0.x, r1.xyzx, r0.xyzx
  80: mul r0.y, r0.w, r0.w
  81: mad r0.y, r0.y, r0.y, l(1.000000)
  82: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
  83: add r0.z, -r1.w, cb0[5].x
  84: add_sat r0.z, r0.z, l(1.000000)
  85: mul r1.xyz, r4.xyzx, r0.yyyy
  86: add r0.x, -|r0.x|, l(1.000000)
  87: mul r0.y, r0.x, r0.x
  88: mul r0.y, r0.y, r0.y
  89: mul r0.x, r0.x, r0.y
  90: add r0.yzw, -r3.xxyz, r0.zzzz
  91: mad r0.xyz, r0.xxxx, r0.yzwy, r3.xyzx
  92: mul r0.xyz, r0.xyzx, r1.xyzx
  93: mad o0.xyz, r5.xyzx, r2.xyzx, r0.xyzx
  94: mov o0.w, l(1.000000)
  95: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 25 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"

Constant Buffer "UnityPerCamera" (144 bytes) on slot 0 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[45], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad o2.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb3[18].xyzw
   6: mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
   8: mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: dp3 r1.x, v2.xyzx, cb2[4].xyzx
  11: dp3 r1.y, v2.xyzx, cb2[5].xyzx
  12: dp3 r1.z, v2.xyzx, cb2[6].xyzx
  13: dp3 r1.w, r1.xyzx, r1.xyzx
  14: rsq r1.w, r1.w
  15: mul r1.xyz, r1.wwww, r1.xyzx
  16: mov o1.xyz, r1.xyzx
  17: mul r1.w, r1.y, r1.y
  18: mad r1.w, r1.x, r1.x, -r1.w
  19: mul r2.xyzw, r1.yzzx, r1.xyzz
  20: dp4 r1.x, cb1[41].xyzw, r2.xyzw
  21: dp4 r1.y, cb1[42].xyzw, r2.xyzw
  22: dp4 r1.z, cb1[43].xyzw, r2.xyzw
  23: mad o3.xyz, cb1[44].xyzx, r1.wwww, r1.xyzx
  24: mul r0.y, r0.y, cb0[5].x
  25: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  26: mov o4.zw, r0.zzzw
  27: add o4.xy, r1.zzzz, r1.xwxx
  28: mov o5.xyzw, l(0,0,0,0)
  29: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 169 math, 11 temp registers, 5 textures, 8 branches
Set 2D Texture "_ShadowMapTexture" to slot 0 sampler slot 2
Set CUBE Texture "unity_SpecCube0" to slot 1 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 2 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 1

Constant Buffer "$Globals" (96 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _BaseColor at 64
  Float _Glossiness at 80
  Float _Metallic at 84
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xy w
// TEXCOORD                 5   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texturecube (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyw
      dcl_output o0.xyzw
      dcl_temps 11
   0: add r0.xyz, -v2.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: mov r2.x, cb4[9].z
   5: mov r2.y, cb4[10].z
   6: mov r2.z, cb4[11].z
   7: dp3 r1.w, r0.xyzx, r2.xyzx
   8: add r2.xyz, v2.xyzx, -cb3[25].xyzx
   9: dp3 r2.x, r2.xyzx, r2.xyzx
  10: sqrt r2.x, r2.x
  11: add r2.x, -r1.w, r2.x
  12: mad r1.w, cb3[25].w, r2.x, r1.w
  13: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  14: eq r2.x, cb6[0].x, l(1.000000)
  15: if_nz r2.x
  16:   eq r2.y, cb6[0].y, l(1.000000)
  17:   mul r3.xyz, v2.yyyy, cb6[2].xyzx
  18:   mad r3.xyz, cb6[1].xyzx, v2.xxxx, r3.xyzx
  19:   mad r3.xyz, cb6[3].xyzx, v2.zzzz, r3.xyzx
  20:   add r3.xyz, r3.xyzx, cb6[4].xyzx
  21:   movc r2.yzw, r2.yyyy, r3.xxyz, v2.xxyz
  22:   add r2.yzw, r2.yyzw, -cb6[6].xxyz
  23:   mul r3.yzw, r2.yyzw, cb6[5].xxyz
  24:   mad r2.y, r3.y, l(0.250000), l(0.750000)
  25:   mad r2.z, cb6[0].z, l(0.500000), l(0.750000)
  26:   max r3.x, r2.z, r2.y
  27:   sample r3.xyzw, r3.xzwx, t3.xyzw, s1
  28: else 
  29:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  30: endif 
  31: dp4_sat r2.y, r3.xyzw, cb2[45].xyzw
  32: div r2.zw, v4.xxxy, v4.wwww
  33: sample r3.xyzw, r2.zwzz, t0.xyzw, s2
  34: add_sat r1.w, r1.w, r3.x
  35: min r2.y, r1.w, r2.y
  36: movc r1.w, r2.x, r2.y, r1.w
  37: add r2.y, -cb0[5].x, l(1.000000)
  38: dp3 r2.z, -r1.xyzx, v1.xyzx
  39: add r2.z, r2.z, r2.z
  40: mad r3.xyz, v1.xyzx, -r2.zzzz, -r1.xyzx
  41: mul r4.xyz, r1.wwww, cb0[2].xyzx
  42: if_nz r2.x
  43:   eq r1.w, cb6[0].y, l(1.000000)
  44:   mul r2.xzw, v2.yyyy, cb6[2].xxyz
  45:   mad r2.xzw, cb6[1].xxyz, v2.xxxx, r2.xxzw
  46:   mad r2.xzw, cb6[3].xxyz, v2.zzzz, r2.xxzw
  47:   add r2.xzw, r2.xxzw, cb6[4].xxyz
  48:   movc r2.xzw, r1.wwww, r2.xxzw, v2.xxyz
  49:   add r2.xzw, r2.xxzw, -cb6[6].xxyz
  50:   mul r5.yzw, r2.xxzw, cb6[5].xxyz
  51:   mul r1.w, r5.y, l(0.250000)
  52:   mul r2.x, cb6[0].z, l(0.500000)
  53:   mad r2.z, -cb6[0].z, l(0.500000), l(0.250000)
  54:   max r1.w, r1.w, r2.x
  55:   min r5.x, r2.z, r1.w
  56:   sample r6.xyzw, r5.xzwx, t3.xyzw, s1
  57:   add r2.xzw, r5.xxzw, l(0.250000, 0.000000, 0.000000, 0.000000)
  58:   sample r7.xyzw, r2.xzwx, t3.xyzw, s1
  59:   add r2.xzw, r5.xxzw, l(0.500000, 0.000000, 0.000000, 0.000000)
  60:   sample r5.xyzw, r2.xzwx, t3.xyzw, s1
  61:   mov r8.xyz, v1.xyzx
  62:   mov r8.w, l(1.000000)
  63:   dp4 r6.x, r6.xyzw, r8.xyzw
  64:   dp4 r6.y, r7.xyzw, r8.xyzw
  65:   dp4 r6.z, r5.xyzw, r8.xyzw
  66: else 
  67:   mov r5.xyz, v1.xyzx
  68:   mov r5.w, l(1.000000)
  69:   dp4 r6.x, cb2[38].xyzw, r5.xyzw
  70:   dp4 r6.y, cb2[39].xyzw, r5.xyzw
  71:   dp4 r6.z, cb2[40].xyzw, r5.xyzw
  72: endif 
  73: add r2.xzw, r6.xxyz, v3.xxyz
  74: max r2.xzw, r2.xxzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  75: lt r1.w, l(0.000000), cb5[2].w
  76: if_nz r1.w
  77:   dp3 r1.w, r3.xyzx, r3.xyzx
  78:   rsq r1.w, r1.w
  79:   mul r5.xyz, r1.wwww, r3.xyzx
  80:   add r6.xyz, -v2.xyzx, cb5[0].xyzx
  81:   div r6.xyz, r6.xyzx, r5.xyzx
  82:   add r7.xyz, -v2.xyzx, cb5[1].xyzx
  83:   div r7.xyz, r7.xyzx, r5.xyzx
  84:   lt r8.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r5.xyzx
  85:   movc r6.xyz, r8.xyzx, r6.xyzx, r7.xyzx
  86:   min r1.w, r6.y, r6.x
  87:   min r1.w, r6.z, r1.w
  88:   add r6.xyz, v2.xyzx, -cb5[2].xyzx
  89:   mad r5.xyz, r5.xyzx, r1.wwww, r6.xyzx
  90: else 
  91:   mov r5.xyz, r3.xyzx
  92: endif 
  93: mad r1.w, -r2.y, l(0.700000), l(1.700000)
  94: mul r1.w, r1.w, r2.y
  95: mul r1.w, r1.w, l(6.000000)
  96: sample_l r5.xyzw, r5.xyzx, t1.xyzw, s0, r1.w
  97: add r3.w, r5.w, l(-1.000000)
  98: mad r3.w, cb5[3].w, r3.w, l(1.000000)
  99: log r3.w, r3.w
 100: mul r3.w, r3.w, cb5[3].y
 101: exp r3.w, r3.w
 102: mul r3.w, r3.w, cb5[3].x
 103: mul r6.xyz, r5.xyzx, r3.wwww
 104: lt r4.w, cb5[1].w, l(0.999990)
 105: if_nz r4.w
 106:   lt r4.w, l(0.000000), cb5[6].w
 107:   if_nz r4.w
 108:     dp3 r4.w, r3.xyzx, r3.xyzx
 109:     rsq r4.w, r4.w
 110:     mul r7.xyz, r3.xyzx, r4.wwww
 111:     add r8.xyz, -v2.xyzx, cb5[4].xyzx
 112:     div r8.xyz, r8.xyzx, r7.xyzx
 113:     add r9.xyz, -v2.xyzx, cb5[5].xyzx
 114:     div r9.xyz, r9.xyzx, r7.xyzx
 115:     lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
 116:     movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
 117:     min r4.w, r8.y, r8.x
 118:     min r4.w, r8.z, r4.w
 119:     add r8.xyz, v2.xyzx, -cb5[6].xyzx
 120:     mad r3.xyz, r7.xyzx, r4.wwww, r8.xyzx
 121:   endif 
 122:   sample_l r7.xyzw, r3.xyzx, t2.xyzw, s0, r1.w
 123:   add r1.w, r7.w, l(-1.000000)
 124:   mad r1.w, cb5[7].w, r1.w, l(1.000000)
 125:   log r1.w, r1.w
 126:   mul r1.w, r1.w, cb5[7].y
 127:   exp r1.w, r1.w
 128:   mul r1.w, r1.w, cb5[7].x
 129:   mul r3.xyz, r7.xyzx, r1.wwww
 130:   mad r5.xyz, r3.wwww, r5.xyzx, -r3.xyzx
 131:   mad r6.xyz, cb5[1].wwww, r5.xyzx, r3.xyzx
 132: endif 
 133: dp3 r1.w, v1.xyzx, v1.xyzx
 134: rsq r1.w, r1.w
 135: mul r3.xyz, r1.wwww, v1.xyzx
 136: add r5.xyz, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
 137: mad r5.xyz, cb0[5].yyyy, r5.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
 138: mad r1.w, -cb0[5].y, l(0.960000), l(0.960000)
 139: mul r7.xyz, r1.wwww, cb0[4].xyzx
 140: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
 141: dp3 r0.w, r0.xyzx, r0.xyzx
 142: max r0.w, r0.w, l(0.001000)
 143: rsq r0.w, r0.w
 144: mul r0.xyz, r0.wwww, r0.xyzx
 145: dp3 r0.w, r3.xyzx, r1.xyzx
 146: dp3_sat r1.x, r3.xyzx, cb2[0].xyzx
 147: dp3_sat r1.y, r3.xyzx, r0.xyzx
 148: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
 149: mul r0.y, r0.x, r0.x
 150: dp2 r0.y, r0.yyyy, r2.yyyy
 151: add r0.y, r0.y, l(-0.500000)
 152: add r0.z, -r1.x, l(1.000000)
 153: mul r1.z, r0.z, r0.z
 154: mul r1.z, r1.z, r1.z
 155: mul r0.z, r0.z, r1.z
 156: mad r0.z, r0.y, r0.z, l(1.000000)
 157: add r1.z, -|r0.w|, l(1.000000)
 158: mul r3.x, r1.z, r1.z
 159: mul r3.x, r3.x, r3.x
 160: mul r1.z, r1.z, r3.x
 161: mad r0.y, r0.y, r1.z, l(1.000000)
 162: mul r0.y, r0.y, r0.z
 163: mul r0.z, r2.y, r2.y
 164: mad r2.y, -r2.y, r2.y, l(1.000000)
 165: mad r3.x, |r0.w|, r2.y, r0.z
 166: mad r2.y, r1.x, r2.y, r0.z
 167: mul r0.w, |r0.w|, r2.y
 168: mad r0.w, r1.x, r3.x, r0.w
 169: add r0.w, r0.w, l(0.000010)
 170: div r0.w, l(0.500000), r0.w
 171: mul r2.y, r0.z, r0.z
 172: mad r3.x, r1.y, r2.y, -r1.y
 173: mad r1.y, r3.x, r1.y, l(1.000000)
 174: mul r2.y, r2.y, l(0.318310)
 175: mad r1.y, r1.y, r1.y, l(0.000000)
 176: div r1.y, r2.y, r1.y
 177: mul r0.w, r0.w, r1.y
 178: mul r0.w, r0.w, l(3.141593)
 179: mul r0.yw, r1.xxxx, r0.yyyw
 180: max r0.w, r0.w, l(0.000000)
 181: mad r0.z, r0.z, r0.z, l(1.000000)
 182: div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
 183: dp3 r1.x, r5.xyzx, r5.xyzx
 184: ne r1.x, r1.x, l(0.000000)
 185: and r1.x, r1.x, l(0x3f800000)
 186: mul r0.w, r0.w, r1.x
 187: add r1.x, -r1.w, cb0[5].x
 188: add_sat r1.x, r1.x, l(1.000000)
 189: mad r2.xyz, r4.xyzx, r0.yyyy, r2.xzwx
 190: mul r3.xyz, r4.xyzx, r0.wwww
 191: add r0.x, -r0.x, l(1.000000)
 192: mul r0.y, r0.x, r0.x
 193: mul r0.y, r0.y, r0.y
 194: mul r0.x, r0.x, r0.y
 195: add r4.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 196: mad r0.xyw, r4.xyxz, r0.xxxx, r5.xyxz
 197: mul r0.xyw, r0.xyxw, r3.xyxz
 198: mad r0.xyw, r7.xyxz, r2.xyxz, r0.xyxw
 199: mul r2.xyz, r6.xyzx, r0.zzzz
 200: add r1.xyw, -r5.xyxz, r1.xxxx
 201: mad r1.xyz, r1.zzzz, r1.xywx, r5.xyzx
 202: mad o0.xyz, r2.xyzx, r1.xyzx, r0.xywx
 203: mov o0.w, l(1.000000)
 204: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN LIGHTMAP_ON 
-- Vertex shader for "d3d11":
// Stats: 19 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord0"

Constant Buffer "UnityPerCamera" (144 bytes) on slot 0 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 3 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb2[18].xyzw
   6: mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
   8: mad r0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: dp3 r1.x, v2.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v2.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v2.xyzx, cb1[6].xyzx
  13: dp3 r1.w, r1.xyzx, r1.xyzx
  14: rsq r1.w, r1.w
  15: mul o1.xyz, r1.wwww, r1.xyzx
  16: mad o3.xy, v4.xyxx, cb3[0].xyxx, cb3[0].zwzz
  17: mov o3.zw, l(0,0,0,0)
  18: mul r0.y, r0.y, cb0[5].x
  19: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  20: mov o4.zw, r0.zzzw
  21: add o4.xy, r1.zzzz, r1.xwxx
  22: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 139 math, 11 temp registers, 2 textures, 4 branches
Set 2D Texture "_ShadowMapTexture" to slot 0 sampler slot 2
Set 2D Texture "unity_Lightmap" to slot 1 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 2 sampler slot 1
Set CUBE Texture "unity_SpecCube1" to slot 3 sampler slot -1

Constant Buffer "$Globals" (96 bytes) on slot 0 {
  Vector4 unity_Lightmap_HDR at 0
  Vector4 _LightColor0 at 32
  Vector4 _BaseColor at 64
  Float _Glossiness at 80
  Float _Metallic at 84
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
// TEXCOORD                 3   xyzw        4     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xy
      dcl_input_ps linear v4.xyw
      dcl_output o0.xyzw
      dcl_temps 11
   0: add r0.xyz, -v2.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: div r2.xy, v4.xyxx, v4.wwww
   5: sample r2.xyzw, r2.xyxx, t0.xyzw, s2
   6: add r1.w, -cb0[5].x, l(1.000000)
   7: dp3 r2.y, -r1.xyzx, v1.xyzx
   8: add r2.y, r2.y, r2.y
   9: mad r2.yzw, v1.xxyz, -r2.yyyy, -r1.xxyz
  10: mov r3.x, cb4[9].z
  11: mov r3.y, cb4[10].z
  12: mov r3.z, cb4[11].z
  13: dp3 r3.x, r0.xyzx, r3.xyzx
  14: add r3.yzw, v2.xxyz, -cb3[25].xxyz
  15: dp3 r3.y, r3.yzwy, r3.yzwy
  16: sqrt r3.y, r3.y
  17: add r3.y, -r3.x, r3.y
  18: mad r3.x, cb3[25].w, r3.y, r3.x
  19: mad_sat r3.x, r3.x, cb3[24].z, cb3[24].w
  20: add_sat r2.x, r2.x, r3.x
  21: mul r3.xyz, r2.xxxx, cb0[2].xyzx
  22: sample r4.xyzw, v3.xyxx, t1.xyzw, s0
  23: log r2.x, r4.w
  24: mul r2.x, r2.x, cb0[0].y
  25: exp r2.x, r2.x
  26: mul r2.x, r2.x, cb0[0].x
  27: lt r3.w, l(0.000000), cb5[2].w
  28: if_nz r3.w
  29:   dp3 r3.w, r2.yzwy, r2.yzwy
  30:   rsq r3.w, r3.w
  31:   mul r5.xyz, r2.yzwy, r3.wwww
  32:   add r6.xyz, -v2.xyzx, cb5[0].xyzx
  33:   div r6.xyz, r6.xyzx, r5.xyzx
  34:   add r7.xyz, -v2.xyzx, cb5[1].xyzx
  35:   div r7.xyz, r7.xyzx, r5.xyzx
  36:   lt r8.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r5.xyzx
  37:   movc r6.xyz, r8.xyzx, r6.xyzx, r7.xyzx
  38:   min r3.w, r6.y, r6.x
  39:   min r3.w, r6.z, r3.w
  40:   add r6.xyz, v2.xyzx, -cb5[2].xyzx
  41:   mad r5.xyz, r5.xyzx, r3.wwww, r6.xyzx
  42: else 
  43:   mov r5.xyz, r2.yzwy
  44: endif 
  45: mad r3.w, -r1.w, l(0.700000), l(1.700000)
  46: mul r3.w, r1.w, r3.w
  47: mul r3.w, r3.w, l(6.000000)
  48: sample_l r5.xyzw, r5.xyzx, t2.xyzw, s1, r3.w
  49: add r4.w, r5.w, l(-1.000000)
  50: mad r4.w, cb5[3].w, r4.w, l(1.000000)
  51: log r4.w, r4.w
  52: mul r4.w, r4.w, cb5[3].y
  53: exp r4.w, r4.w
  54: mul r4.w, r4.w, cb5[3].x
  55: mul r6.xyz, r5.xyzx, r4.wwww
  56: lt r5.w, cb5[1].w, l(0.999990)
  57: if_nz r5.w
  58:   lt r5.w, l(0.000000), cb5[6].w
  59:   if_nz r5.w
  60:     dp3 r5.w, r2.yzwy, r2.yzwy
  61:     rsq r5.w, r5.w
  62:     mul r7.xyz, r2.yzwy, r5.wwww
  63:     add r8.xyz, -v2.xyzx, cb5[4].xyzx
  64:     div r8.xyz, r8.xyzx, r7.xyzx
  65:     add r9.xyz, -v2.xyzx, cb5[5].xyzx
  66:     div r9.xyz, r9.xyzx, r7.xyzx
  67:     lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  68:     movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  69:     min r5.w, r8.y, r8.x
  70:     min r5.w, r8.z, r5.w
  71:     add r8.xyz, v2.xyzx, -cb5[6].xyzx
  72:     mad r2.yzw, r7.xxyz, r5.wwww, r8.xxyz
  73:   endif 
  74:   sample_l r7.xyzw, r2.yzwy, t3.xyzw, s1, r3.w
  75:   add r2.y, r7.w, l(-1.000000)
  76:   mad r2.y, cb5[7].w, r2.y, l(1.000000)
  77:   log r2.y, r2.y
  78:   mul r2.y, r2.y, cb5[7].y
  79:   exp r2.y, r2.y
  80:   mul r2.y, r2.y, cb5[7].x
  81:   mul r2.yzw, r7.xxyz, r2.yyyy
  82:   mad r5.xyz, r4.wwww, r5.xyzx, -r2.yzwy
  83:   mad r6.xyz, cb5[1].wwww, r5.xyzx, r2.yzwy
  84: endif 
  85: dp3 r2.y, v1.xyzx, v1.xyzx
  86: rsq r2.y, r2.y
  87: mul r2.yzw, r2.yyyy, v1.xxyz
  88: add r5.xyz, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
  89: mad r5.xyz, cb0[5].yyyy, r5.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
  90: mad r3.w, -cb0[5].y, l(0.960000), l(0.960000)
  91: mul r7.xyz, r3.wwww, cb0[4].xyzx
  92: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
  93: dp3 r0.w, r0.xyzx, r0.xyzx
  94: max r0.w, r0.w, l(0.001000)
  95: rsq r0.w, r0.w
  96: mul r0.xyz, r0.wwww, r0.xyzx
  97: dp3 r0.w, r2.yzwy, r1.xyzx
  98: dp3_sat r1.x, r2.yzwy, cb2[0].xyzx
  99: dp3_sat r1.y, r2.yzwy, r0.xyzx
 100: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
 101: mul r0.y, r0.x, r0.x
 102: dp2 r0.y, r0.yyyy, r1.wwww
 103: add r0.y, r0.y, l(-0.500000)
 104: add r0.z, -r1.x, l(1.000000)
 105: mul r1.z, r0.z, r0.z
 106: mul r1.z, r1.z, r1.z
 107: mul r0.z, r0.z, r1.z
 108: mad r0.z, r0.y, r0.z, l(1.000000)
 109: add r1.z, -|r0.w|, l(1.000000)
 110: mul r2.y, r1.z, r1.z
 111: mul r2.y, r2.y, r2.y
 112: mul r1.z, r1.z, r2.y
 113: mad r0.y, r0.y, r1.z, l(1.000000)
 114: mul r0.y, r0.y, r0.z
 115: mul r0.z, r1.w, r1.w
 116: mad r1.w, -r1.w, r1.w, l(1.000000)
 117: mad r2.y, |r0.w|, r1.w, r0.z
 118: mad r1.w, r1.x, r1.w, r0.z
 119: mul r0.w, |r0.w|, r1.w
 120: mad r0.w, r1.x, r2.y, r0.w
 121: add r0.w, r0.w, l(0.000010)
 122: div r0.w, l(0.500000), r0.w
 123: mul r1.w, r0.z, r0.z
 124: mad r2.y, r1.y, r1.w, -r1.y
 125: mad r1.y, r2.y, r1.y, l(1.000000)
 126: mul r1.w, r1.w, l(0.318310)
 127: mad r1.y, r1.y, r1.y, l(0.000000)
 128: div r1.y, r1.w, r1.y
 129: mul r0.w, r0.w, r1.y
 130: mul r0.w, r0.w, l(3.141593)
 131: mul r0.yw, r1.xxxx, r0.yyyw
 132: max r0.w, r0.w, l(0.000000)
 133: mad r0.z, r0.z, r0.z, l(1.000000)
 134: div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
 135: dp3 r1.x, r5.xyzx, r5.xyzx
 136: ne r1.x, r1.x, l(0.000000)
 137: and r1.x, r1.x, l(0x3f800000)
 138: mul r0.w, r0.w, r1.x
 139: add r1.x, -r3.w, cb0[5].x
 140: add_sat r1.x, r1.x, l(1.000000)
 141: mul r2.yzw, r0.yyyy, r3.xxyz
 142: mad r2.xyz, r2.xxxx, r4.xyzx, r2.yzwy
 143: mul r3.xyz, r3.xyzx, r0.wwww
 144: add r0.x, -r0.x, l(1.000000)
 145: mul r0.y, r0.x, r0.x
 146: mul r0.y, r0.y, r0.y
 147: mul r0.x, r0.x, r0.y
 148: add r4.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 149: mad r0.xyw, r4.xyxz, r0.xxxx, r5.xyxz
 150: mul r0.xyw, r0.xyxw, r3.xyxz
 151: mad r0.xyw, r7.xyxz, r2.xyxz, r0.xyxw
 152: mul r2.xyz, r6.xyzx, r0.zzzz
 153: add r1.xyw, -r5.xyxz, r1.xxxx
 154: mad r1.xyz, r1.zzzz, r1.xywx, r5.xyzx
 155: mad o0.xyz, r2.xyzx, r1.xyzx, r0.xywx
 156: mov o0.w, l(1.000000)
 157: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN LIGHTMAP_ON LIGHTMAP_SHADOW_MIXING 
-- Vertex shader for "d3d11":
// Stats: 19 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord0"

Constant Buffer "UnityPerCamera" (144 bytes) on slot 0 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 3 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb2[18].xyzw
   6: mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
   8: mad r0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: dp3 r1.x, v2.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v2.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v2.xyzx, cb1[6].xyzx
  13: dp3 r1.w, r1.xyzx, r1.xyzx
  14: rsq r1.w, r1.w
  15: mul o1.xyz, r1.wwww, r1.xyzx
  16: mad o3.xy, v4.xyxx, cb3[0].xyxx, cb3[0].zwzz
  17: mov o3.zw, l(0,0,0,0)
  18: mul r0.y, r0.y, cb0[5].x
  19: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  20: mov o4.zw, r0.zzzw
  21: add o4.xy, r1.zzzz, r1.xwxx
  22: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 99 math, 9 temp registers, 2 textures, 4 branches
Set 2D Texture "_ShadowMapTexture" to slot 0 sampler slot 2
Set 2D Texture "unity_Lightmap" to slot 1 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 2 sampler slot 1
Set CUBE Texture "unity_SpecCube1" to slot 3 sampler slot -1

Constant Buffer "$Globals" (96 bytes) on slot 0 {
  Vector4 unity_Lightmap_HDR at 0
  Vector4 _LightColor0 at 32
  Vector4 _BaseColor at 64
  Float _Glossiness at 80
  Float _Metallic at 84
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
  Vector4 unity_ShadowColor at 368
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
// TEXCOORD                 3   xyzw        4     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[24], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xy
      dcl_input_ps linear v4.xyw
      dcl_output o0.xyzw
      dcl_temps 9
   0: add r0.xyz, -v2.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: div r2.xy, v4.xyxx, v4.wwww
   5: sample r2.xyzw, r2.xyxx, t0.xyzw, s2
   6: add r0.w, -cb0[5].x, l(1.000000)
   7: dp3 r1.w, -r1.xyzx, v1.xyzx
   8: add r1.w, r1.w, r1.w
   9: mad r2.yzw, v1.xxyz, -r1.wwww, -r1.xxyz
  10: mov r3.x, cb4[9].z
  11: mov r3.y, cb4[10].z
  12: mov r3.z, cb4[11].z
  13: dp3 r0.x, r0.xyzx, r3.xyzx
  14: add r3.xyz, v2.xyzx, -cb3[25].xyzx
  15: dp3 r0.y, r3.xyzx, r3.xyzx
  16: sqrt r0.y, r0.y
  17: add r0.y, -r0.x, r0.y
  18: mad r0.x, cb3[25].w, r0.y, r0.x
  19: mad_sat r0.x, r0.x, cb3[24].z, cb3[24].w
  20: add_sat r0.x, r0.x, r2.x
  21: sample r3.xyzw, v3.xyxx, t1.xyzw, s0
  22: log r0.y, r3.w
  23: mul r0.y, r0.y, cb0[0].y
  24: exp r0.y, r0.y
  25: mul r0.y, r0.y, cb0[0].x
  26: mul r4.xyz, r3.xyzx, r0.yyyy
  27: dp3 r0.z, v1.xyzx, cb2[0].xyzx
  28: max r0.z, r0.z, l(0.000000)
  29: add r0.x, -r0.x, l(1.000000)
  30: mul r0.x, r0.x, r0.z
  31: mad r5.xyz, -r0.xxxx, cb0[2].xyzx, r4.xyzx
  32: max r5.xyz, r5.xyzx, cb4[23].xyzx
  33: mad r0.xyz, r0.yyyy, r3.xyzx, -r5.xyzx
  34: mad r0.xyz, cb3[24].xxxx, r0.xyzx, r5.xyzx
  35: min r0.xyz, r0.xyzx, r4.xyzx
  36: lt r1.w, l(0.000000), cb5[2].w
  37: if_nz r1.w
  38:   dp3 r1.w, r2.yzwy, r2.yzwy
  39:   rsq r1.w, r1.w
  40:   mul r3.xyz, r1.wwww, r2.yzwy
  41:   add r4.xyz, -v2.xyzx, cb5[0].xyzx
  42:   div r4.xyz, r4.xyzx, r3.xyzx
  43:   add r5.xyz, -v2.xyzx, cb5[1].xyzx
  44:   div r5.xyz, r5.xyzx, r3.xyzx
  45:   lt r6.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r3.xyzx
  46:   movc r4.xyz, r6.xyzx, r4.xyzx, r5.xyzx
  47:   min r1.w, r4.y, r4.x
  48:   min r1.w, r4.z, r1.w
  49:   add r4.xyz, v2.xyzx, -cb5[2].xyzx
  50:   mad r3.xyz, r3.xyzx, r1.wwww, r4.xyzx
  51: else 
  52:   mov r3.xyz, r2.yzwy
  53: endif 
  54: mad r1.w, -r0.w, l(0.700000), l(1.700000)
  55: mul r1.w, r0.w, r1.w
  56: mul r1.w, r1.w, l(6.000000)
  57: sample_l r3.xyzw, r3.xyzx, t2.xyzw, s1, r1.w
  58: add r2.x, r3.w, l(-1.000000)
  59: mad r2.x, cb5[3].w, r2.x, l(1.000000)
  60: log r2.x, r2.x
  61: mul r2.x, r2.x, cb5[3].y
  62: exp r2.x, r2.x
  63: mul r2.x, r2.x, cb5[3].x
  64: mul r4.xyz, r3.xyzx, r2.xxxx
  65: lt r3.w, cb5[1].w, l(0.999990)
  66: if_nz r3.w
  67:   lt r3.w, l(0.000000), cb5[6].w
  68:   if_nz r3.w
  69:     dp3 r3.w, r2.yzwy, r2.yzwy
  70:     rsq r3.w, r3.w
  71:     mul r5.xyz, r2.yzwy, r3.wwww
  72:     add r6.xyz, -v2.xyzx, cb5[4].xyzx
  73:     div r6.xyz, r6.xyzx, r5.xyzx
  74:     add r7.xyz, -v2.xyzx, cb5[5].xyzx
  75:     div r7.xyz, r7.xyzx, r5.xyzx
  76:     lt r8.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r5.xyzx
  77:     movc r6.xyz, r8.xyzx, r6.xyzx, r7.xyzx
  78:     min r3.w, r6.y, r6.x
  79:     min r3.w, r6.z, r3.w
  80:     add r6.xyz, v2.xyzx, -cb5[6].xyzx
  81:     mad r2.yzw, r5.xxyz, r3.wwww, r6.xxyz
  82:   endif 
  83:   sample_l r5.xyzw, r2.yzwy, t3.xyzw, s1, r1.w
  84:   add r1.w, r5.w, l(-1.000000)
  85:   mad r1.w, cb5[7].w, r1.w, l(1.000000)
  86:   log r1.w, r1.w
  87:   mul r1.w, r1.w, cb5[7].y
  88:   exp r1.w, r1.w
  89:   mul r1.w, r1.w, cb5[7].x
  90:   mul r2.yzw, r5.xxyz, r1.wwww
  91:   mad r3.xyz, r2.xxxx, r3.xyzx, -r2.yzwy
  92:   mad r4.xyz, cb5[1].wwww, r3.xyzx, r2.yzwy
  93: endif 
  94: dp3 r1.w, v1.xyzx, v1.xyzx
  95: rsq r1.w, r1.w
  96: mul r2.xyz, r1.wwww, v1.xyzx
  97: add r3.xyz, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
  98: mad r3.xyz, cb0[5].yyyy, r3.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
  99: mad r1.w, -cb0[5].y, l(0.960000), l(0.960000)
 100: mul r5.xyz, r1.wwww, cb0[4].xyzx
 101: dp3 r1.x, r2.xyzx, r1.xyzx
 102: mul r0.w, r0.w, r0.w
 103: mad r0.w, r0.w, r0.w, l(1.000000)
 104: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
 105: add r1.y, -r1.w, cb0[5].x
 106: add_sat r1.y, r1.y, l(1.000000)
 107: mul r2.xyz, r4.xyzx, r0.wwww
 108: add r0.w, -|r1.x|, l(1.000000)
 109: mul r1.x, r0.w, r0.w
 110: mul r1.x, r1.x, r1.x
 111: mul r0.w, r0.w, r1.x
 112: add r1.xyz, -r3.xyzx, r1.yyyy
 113: mad r1.xyz, r0.wwww, r1.xyzx, r3.xyzx
 114: mul r1.xyz, r1.xyzx, r2.xyzx
 115: mad o0.xyz, r5.xyzx, r0.xyzx, r1.xyzx
 116: mov o0.w, l(1.000000)
 117: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL VERTEXLIGHT_ON 
-- Vertex shader for "d3d11":
// Stats: 43 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"

Constant Buffer "UnityLighting" (752 bytes) on slot 0 {
  Vector4 unity_4LightPosX0 at 32
  Vector4 unity_4LightPosY0 at 48
  Vector4 unity_4LightPosZ0 at 64
  Vector4 unity_4LightAtten0 at 80
  Vector4 unity_LightColor[8] at 96
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xy          4     NONE   float   xy  
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[45], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xy
      dcl_output o5.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
   5: mul r2.xyzw, r1.yyyy, cb2[18].xyzw
   6: mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
   9: dp3 r1.x, v2.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v2.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v2.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: rsq r0.w, r0.w
  14: mul r1.xyz, r0.wwww, r1.xyzx
  15: mov o1.xyz, r1.xyzx
  16: mov o2.xyz, r0.xyzx
  17: add r2.xyzw, -r0.xxxx, cb0[2].xyzw
  18: add r3.xyzw, -r0.yyyy, cb0[3].xyzw
  19: add r0.xyzw, -r0.zzzz, cb0[4].xyzw
  20: mul r4.xyzw, r1.yyyy, r3.xyzw
  21: mul r3.xyzw, r3.xyzw, r3.xyzw
  22: mad r3.xyzw, r2.xyzw, r2.xyzw, r3.xyzw
  23: mad r2.xyzw, r2.xyzw, r1.xxxx, r4.xyzw
  24: mad r2.xyzw, r0.xyzw, r1.zzzz, r2.xyzw
  25: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  26: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  27: rsq r3.xyzw, r0.xyzw
  28: mad r0.xyzw, r0.xyzw, cb0[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  29: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  30: mul r2.xyzw, r2.xyzw, r3.xyzw
  31: max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  32: mul r0.xyzw, r0.xyzw, r2.xyzw
  33: mul r2.xyz, r0.yyyy, cb0[7].xyzx
  34: mad r2.xyz, cb0[6].xyzx, r0.xxxx, r2.xyzx
  35: mad r0.xyz, cb0[8].xyzx, r0.zzzz, r2.xyzx
  36: mad r0.xyz, cb0[9].xyzx, r0.wwww, r0.xyzx
  37: mul r0.w, r1.y, r1.y
  38: mad r0.w, r1.x, r1.x, -r0.w
  39: mul r1.xyzw, r1.yzzx, r1.xyzz
  40: dp4 r2.x, cb0[41].xyzw, r1.xyzw
  41: dp4 r2.y, cb0[42].xyzw, r1.xyzw
  42: dp4 r2.z, cb0[43].xyzw, r1.xyzw
  43: mad r1.xyz, cb0[44].xyzx, r0.wwww, r2.xyzx
  44: add o3.xyz, r0.xyzx, r1.xyzx
  45: mov o4.xy, l(0,0,0,0)
  46: mov o5.xyzw, l(0,0,0,0)
  47: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN VERTEXLIGHT_ON 
-- Vertex shader for "d3d11":
// Stats: 47 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"

Constant Buffer "UnityPerCamera" (144 bytes) on slot 0 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 unity_4LightPosX0 at 32
  Vector4 unity_4LightPosY0 at 48
  Vector4 unity_4LightPosZ0 at 64
  Vector4 unity_4LightAtten0 at 80
  Vector4 unity_LightColor[8] at 96
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[45], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
   5: mul r2.xyzw, r1.yyyy, cb3[18].xyzw
   6: mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
   8: mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
   9: mov o0.xyzw, r1.xyzw
  10: dp3 r2.x, v2.xyzx, cb2[4].xyzx
  11: dp3 r2.y, v2.xyzx, cb2[5].xyzx
  12: dp3 r2.z, v2.xyzx, cb2[6].xyzx
  13: dp3 r0.w, r2.xyzx, r2.xyzx
  14: rsq r0.w, r0.w
  15: mul r2.xyz, r0.wwww, r2.xyzx
  16: mov o1.xyz, r2.xyzx
  17: mov o2.xyz, r0.xyzx
  18: add r3.xyzw, -r0.xxxx, cb1[2].xyzw
  19: add r4.xyzw, -r0.yyyy, cb1[3].xyzw
  20: add r0.xyzw, -r0.zzzz, cb1[4].xyzw
  21: mul r5.xyzw, r2.yyyy, r4.xyzw
  22: mul r4.xyzw, r4.xyzw, r4.xyzw
  23: mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
  24: mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
  25: mad r3.xyzw, r0.xyzw, r2.zzzz, r3.xyzw
  26: mad r0.xyzw, r0.xyzw, r0.xyzw, r4.xyzw
  27: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  28: rsq r4.xyzw, r0.xyzw
  29: mad r0.xyzw, r0.xyzw, cb1[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  30: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  31: mul r3.xyzw, r3.xyzw, r4.xyzw
  32: max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  33: mul r0.xyzw, r0.xyzw, r3.xyzw
  34: mul r3.xyz, r0.yyyy, cb1[7].xyzx
  35: mad r3.xyz, cb1[6].xyzx, r0.xxxx, r3.xyzx
  36: mad r0.xyz, cb1[8].xyzx, r0.zzzz, r3.xyzx
  37: mad r0.xyz, cb1[9].xyzx, r0.wwww, r0.xyzx
  38: mul r0.w, r2.y, r2.y
  39: mad r0.w, r2.x, r2.x, -r0.w
  40: mul r2.xyzw, r2.yzzx, r2.xyzz
  41: dp4 r3.x, cb1[41].xyzw, r2.xyzw
  42: dp4 r3.y, cb1[42].xyzw, r2.xyzw
  43: dp4 r3.z, cb1[43].xyzw, r2.xyzw
  44: mad r2.xyz, cb1[44].xyzx, r0.wwww, r3.xyzx
  45: add o3.xyz, r0.xyzx, r2.xyzx
  46: mul r0.x, r1.y, cb0[5].x
  47: mul r0.w, r0.x, l(0.500000)
  48: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  49: mov o4.zw, r1.zzzw
  50: add o4.xy, r0.zzzz, r0.xwxx
  51: mov o5.xyzw, l(0,0,0,0)
  52: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

 }


 // Stats for Vertex shader:
 //        d3d11: 15 avg math (15..18)
 // Stats for Fragment shader:
 //        d3d11: 101 avg math (80..141), 2 avg texture (1..3), 2 avg branch (2..4)
 Pass {
  Name "FORWARD"
  Tags { "LIGHTMODE"="FORWARDADD" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
  ZWrite Off
  Blend One One
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Keywords set in this variant: POINT 
-- Vertex shader for "d3d11":
// Stats: 15 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"

Constant Buffer "UnityPerDraw" (160 bytes) on slot 0 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 1 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xy          3     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb0[1].xyzw
   1: mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb0[3].xyzw
   4: mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb1[18].xyzw
   6: mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
   8: mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
   9: dp3 r0.x, v2.xyzx, cb0[4].xyzx
  10: dp3 r0.y, v2.xyzx, cb0[5].xyzx
  11: dp3 r0.z, v2.xyzx, cb0[6].xyzx
  12: dp3 r0.w, r0.xyzx, r0.xyzx
  13: rsq r0.w, r0.w
  14: mul o1.xyz, r0.wwww, r0.xyzx
  15: mov o3.xy, l(0,0,0,0)
  16: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 90 math, 7 temp registers, 2 textures, 2 branches
Set 2D Texture "_LightTexture0" to slot 0 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 1 sampler slot 0

Constant Buffer "$Globals" (160 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _BaseColor at 128
  Float _Glossiness at 144
  Float _Metallic at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xy          3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture3d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, -v2.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v2.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, r2.xyzx
   8: mul r3.xyz, v2.yyyy, cb0[5].xyzx
   9: mad r3.xyz, cb0[4].xyzx, v2.xxxx, r3.xyzx
  10: mad r3.xyz, cb0[6].xyzx, v2.zzzz, r3.xyzx
  11: add r3.xyz, r3.xyzx, cb0[7].xyzx
  12: eq r1.w, cb3[0].x, l(1.000000)
  13: if_nz r1.w
  14:   eq r1.w, cb3[0].y, l(1.000000)
  15:   mul r4.xyz, v2.yyyy, cb3[2].xyzx
  16:   mad r4.xyz, cb3[1].xyzx, v2.xxxx, r4.xyzx
  17:   mad r4.xyz, cb3[3].xyzx, v2.zzzz, r4.xyzx
  18:   add r4.xyz, r4.xyzx, cb3[4].xyzx
  19:   movc r4.xyz, r1.wwww, r4.xyzx, v2.xyzx
  20:   add r4.xyz, r4.xyzx, -cb3[6].xyzx
  21:   mul r4.yzw, r4.xxyz, cb3[5].xxyz
  22:   mad r1.w, r4.y, l(0.250000), l(0.750000)
  23:   mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
  24:   max r4.x, r1.w, r2.w
  25:   sample r4.xyzw, r4.xzwx, t1.xyzw, s0
  26: else 
  27:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  28: endif 
  29: dp4_sat r1.w, r4.xyzw, cb2[45].xyzw
  30: dp3 r2.w, r3.xyzx, r3.xyzx
  31: sample r3.xyzw, r2.wwww, t0.xyzw, s1
  32: mul r1.w, r1.w, r3.x
  33: mul r3.xyz, r1.wwww, cb0[2].xyzx
  34: dp3 r1.w, v1.xyzx, v1.xyzx
  35: rsq r1.w, r1.w
  36: mul r4.xyz, r1.wwww, v1.xyzx
  37: add r5.xyz, cb0[8].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
  38: mad r5.xyz, cb0[9].yyyy, r5.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
  39: mad r1.w, -cb0[9].y, l(0.960000), l(0.960000)
  40: mul r6.xyz, r1.wwww, cb0[8].xyzx
  41: add r1.w, -cb0[9].x, l(1.000000)
  42: mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
  43: dp3 r0.w, r0.xyzx, r0.xyzx
  44: max r0.w, r0.w, l(0.001000)
  45: rsq r0.w, r0.w
  46: mul r0.xyz, r0.wwww, r0.xyzx
  47: dp3 r0.w, r4.xyzx, r2.xyzx
  48: dp3_sat r2.x, r4.xyzx, r1.xyzx
  49: dp3_sat r2.y, r4.xyzx, r0.xyzx
  50: dp3_sat r0.x, r1.xyzx, r0.xyzx
  51: mul r0.y, r0.x, r0.x
  52: dp2 r0.y, r0.yyyy, r1.wwww
  53: add r0.y, r0.y, l(-0.500000)
  54: add r0.z, -r2.x, l(1.000000)
  55: mul r1.x, r0.z, r0.z
  56: mul r1.x, r1.x, r1.x
  57: mul r0.z, r0.z, r1.x
  58: mad r0.z, r0.y, r0.z, l(1.000000)
  59: add r1.x, -|r0.w|, l(1.000000)
  60: mul r1.y, r1.x, r1.x
  61: mul r1.y, r1.y, r1.y
  62: mul r1.x, r1.x, r1.y
  63: mad r0.y, r0.y, r1.x, l(1.000000)
  64: mul r0.y, r0.y, r0.z
  65: mul r0.z, r1.w, r1.w
  66: mad r1.x, -r1.w, r1.w, l(1.000000)
  67: mad r1.y, |r0.w|, r1.x, r0.z
  68: mad r1.x, r2.x, r1.x, r0.z
  69: mul r0.w, |r0.w|, r1.x
  70: mad r0.w, r2.x, r1.y, r0.w
  71: add r0.w, r0.w, l(0.000010)
  72: div r0.w, l(0.500000), r0.w
  73: mul r0.z, r0.z, r0.z
  74: mad r1.x, r2.y, r0.z, -r2.y
  75: mad r1.x, r1.x, r2.y, l(1.000000)
  76: mul r0.z, r0.z, l(0.318310)
  77: mad r1.x, r1.x, r1.x, l(0.000000)
  78: div r0.z, r0.z, r1.x
  79: mul r0.z, r0.z, r0.w
  80: mul r0.z, r0.z, l(3.141593)
  81: mul r0.yz, r2.xxxx, r0.yyzy
  82: max r0.z, r0.z, l(0.000000)
  83: dp3 r0.w, r5.xyzx, r5.xyzx
  84: ne r0.w, r0.w, l(0.000000)
  85: and r0.w, r0.w, l(0x3f800000)
  86: mul r0.z, r0.w, r0.z
  87: mul r1.xyz, r0.yyyy, r3.xyzx
  88: mul r0.yzw, r3.xxyz, r0.zzzz
  89: add r0.x, -r0.x, l(1.000000)
  90: mul r1.w, r0.x, r0.x
  91: mul r1.w, r1.w, r1.w
  92: mul r0.x, r0.x, r1.w
  93: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  94: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
  95: mul r0.xyz, r0.yzwy, r2.xyzx
  96: mad o0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
  97: mov o0.w, l(1.000000)
  98: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 15 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"

Constant Buffer "UnityPerDraw" (160 bytes) on slot 0 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 1 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xy          3     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb0[1].xyzw
   1: mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb0[3].xyzw
   4: mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb1[18].xyzw
   6: mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
   8: mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
   9: dp3 r0.x, v2.xyzx, cb0[4].xyzx
  10: dp3 r0.y, v2.xyzx, cb0[5].xyzx
  11: dp3 r0.z, v2.xyzx, cb0[6].xyzx
  12: dp3 r0.w, r0.xyzx, r0.xyzx
  13: rsq r0.w, r0.w
  14: mul o1.xyz, r0.wwww, r0.xyzx
  15: mov o3.xy, l(0,0,0,0)
  16: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 80 math, 6 temp registers, 1 textures, 2 branches
Set 3D Texture "unity_ProbeVolumeSH" to slot 0

Constant Buffer "$Globals" (96 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _BaseColor at 64
  Float _Glossiness at 80
  Float _Metallic at 84
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xy          3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture3d (float,float,float,float) t0
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: add r0.xyz, -v2.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: eq r1.w, cb3[0].x, l(1.000000)
   5: if_nz r1.w
   6:   eq r1.w, cb3[0].y, l(1.000000)
   7:   mul r2.xyz, v2.yyyy, cb3[2].xyzx
   8:   mad r2.xyz, cb3[1].xyzx, v2.xxxx, r2.xyzx
   9:   mad r2.xyz, cb3[3].xyzx, v2.zzzz, r2.xyzx
  10:   add r2.xyz, r2.xyzx, cb3[4].xyzx
  11:   movc r2.xyz, r1.wwww, r2.xyzx, v2.xyzx
  12:   add r2.xyz, r2.xyzx, -cb3[6].xyzx
  13:   mul r2.yzw, r2.xxyz, cb3[5].xxyz
  14:   mad r1.w, r2.y, l(0.250000), l(0.750000)
  15:   mad r2.y, cb3[0].z, l(0.500000), l(0.750000)
  16:   max r2.x, r1.w, r2.y
  17:   sample r2.xyzw, r2.xzwx, t0.xyzw, s0
  18: else 
  19:   mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  20: endif 
  21: dp4_sat r1.w, r2.xyzw, cb2[45].xyzw
  22: mul r2.xyz, r1.wwww, cb0[2].xyzx
  23: dp3 r1.w, v1.xyzx, v1.xyzx
  24: rsq r1.w, r1.w
  25: mul r3.xyz, r1.wwww, v1.xyzx
  26: add r4.xyz, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
  27: mad r4.xyz, cb0[5].yyyy, r4.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
  28: mad r1.w, -cb0[5].y, l(0.960000), l(0.960000)
  29: mul r5.xyz, r1.wwww, cb0[4].xyzx
  30: add r1.w, -cb0[5].x, l(1.000000)
  31: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
  32: dp3 r0.w, r0.xyzx, r0.xyzx
  33: max r0.w, r0.w, l(0.001000)
  34: rsq r0.w, r0.w
  35: mul r0.xyz, r0.wwww, r0.xyzx
  36: dp3 r0.w, r3.xyzx, r1.xyzx
  37: dp3_sat r1.x, r3.xyzx, cb2[0].xyzx
  38: dp3_sat r1.y, r3.xyzx, r0.xyzx
  39: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
  40: mul r0.y, r0.x, r0.x
  41: dp2 r0.y, r0.yyyy, r1.wwww
  42: add r0.y, r0.y, l(-0.500000)
  43: add r0.z, -r1.x, l(1.000000)
  44: mul r1.z, r0.z, r0.z
  45: mul r1.z, r1.z, r1.z
  46: mul r0.z, r0.z, r1.z
  47: mad r0.z, r0.y, r0.z, l(1.000000)
  48: add r1.z, -|r0.w|, l(1.000000)
  49: mul r2.w, r1.z, r1.z
  50: mul r2.w, r2.w, r2.w
  51: mul r1.z, r1.z, r2.w
  52: mad r0.y, r0.y, r1.z, l(1.000000)
  53: mul r0.y, r0.y, r0.z
  54: mul r0.z, r1.w, r1.w
  55: mad r1.z, -r1.w, r1.w, l(1.000000)
  56: mad r1.w, |r0.w|, r1.z, r0.z
  57: mad r1.z, r1.x, r1.z, r0.z
  58: mul r0.w, |r0.w|, r1.z
  59: mad r0.w, r1.x, r1.w, r0.w
  60: add r0.w, r0.w, l(0.000010)
  61: div r0.w, l(0.500000), r0.w
  62: mul r0.z, r0.z, r0.z
  63: mad r1.z, r1.y, r0.z, -r1.y
  64: mad r1.y, r1.z, r1.y, l(1.000000)
  65: mul r0.z, r0.z, l(0.318310)
  66: mad r1.y, r1.y, r1.y, l(0.000000)
  67: div r0.z, r0.z, r1.y
  68: mul r0.z, r0.z, r0.w
  69: mul r0.z, r0.z, l(3.141593)
  70: mul r0.yz, r1.xxxx, r0.yyzy
  71: max r0.z, r0.z, l(0.000000)
  72: dp3 r0.w, r4.xyzx, r4.xyzx
  73: ne r0.w, r0.w, l(0.000000)
  74: and r0.w, r0.w, l(0x3f800000)
  75: mul r0.z, r0.w, r0.z
  76: mul r1.xyz, r0.yyyy, r2.xyzx
  77: mul r0.yzw, r2.xxyz, r0.zzzz
  78: add r0.x, -r0.x, l(1.000000)
  79: mul r1.w, r0.x, r0.x
  80: mul r1.w, r1.w, r1.w
  81: mul r0.x, r0.x, r1.w
  82: add r2.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  83: mad r2.xyz, r2.xyzx, r0.xxxx, r4.xyzx
  84: mul r0.xyz, r0.yzwy, r2.xyzx
  85: mad o0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
  86: mov o0.w, l(1.000000)
  87: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 15 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"

Constant Buffer "UnityPerDraw" (160 bytes) on slot 0 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 1 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xy          3     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb0[1].xyzw
   1: mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb0[3].xyzw
   4: mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb1[18].xyzw
   6: mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
   8: mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
   9: dp3 r0.x, v2.xyzx, cb0[4].xyzx
  10: dp3 r0.y, v2.xyzx, cb0[5].xyzx
  11: dp3 r0.z, v2.xyzx, cb0[6].xyzx
  12: dp3 r0.w, r0.xyzx, r0.xyzx
  13: rsq r0.w, r0.w
  14: mul o1.xyz, r0.wwww, r0.xyzx
  15: mov o3.xy, l(0,0,0,0)
  16: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 96 math, 7 temp registers, 3 textures, 2 branches
Set 2D Texture "_LightTexture0" to slot 0 sampler slot 1
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (160 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _BaseColor at 128
  Float _Glossiness at 144
  Float _Metallic at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xy          3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, -v2.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v2.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, r2.xyzx
   8: mul r3.xyzw, v2.yyyy, cb0[5].xyzw
   9: mad r3.xyzw, cb0[4].xyzw, v2.xxxx, r3.xyzw
  10: mad r3.xyzw, cb0[6].xyzw, v2.zzzz, r3.xyzw
  11: add r3.xyzw, r3.xyzw, cb0[7].xyzw
  12: eq r1.w, cb3[0].x, l(1.000000)
  13: if_nz r1.w
  14:   eq r1.w, cb3[0].y, l(1.000000)
  15:   mul r4.xyz, v2.yyyy, cb3[2].xyzx
  16:   mad r4.xyz, cb3[1].xyzx, v2.xxxx, r4.xyzx
  17:   mad r4.xyz, cb3[3].xyzx, v2.zzzz, r4.xyzx
  18:   add r4.xyz, r4.xyzx, cb3[4].xyzx
  19:   movc r4.xyz, r1.wwww, r4.xyzx, v2.xyzx
  20:   add r4.xyz, r4.xyzx, -cb3[6].xyzx
  21:   mul r4.yzw, r4.xxyz, cb3[5].xxyz
  22:   mad r1.w, r4.y, l(0.250000), l(0.750000)
  23:   mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
  24:   max r4.x, r1.w, r2.w
  25:   sample r4.xyzw, r4.xzwx, t2.xyzw, s0
  26: else 
  27:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  28: endif 
  29: dp4_sat r1.w, r4.xyzw, cb2[45].xyzw
  30: lt r2.w, l(0.000000), r3.z
  31: and r2.w, r2.w, l(0x3f800000)
  32: div r4.xy, r3.xyxx, r3.wwww
  33: add r4.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  34: sample r4.xyzw, r4.xyxx, t0.xyzw, s1
  35: mul r2.w, r2.w, r4.w
  36: dp3 r3.x, r3.xyzx, r3.xyzx
  37: sample r3.xyzw, r3.xxxx, t1.xyzw, s2
  38: mul r2.w, r2.w, r3.x
  39: mul r1.w, r1.w, r2.w
  40: mul r3.xyz, r1.wwww, cb0[2].xyzx
  41: dp3 r1.w, v1.xyzx, v1.xyzx
  42: rsq r1.w, r1.w
  43: mul r4.xyz, r1.wwww, v1.xyzx
  44: add r5.xyz, cb0[8].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
  45: mad r5.xyz, cb0[9].yyyy, r5.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
  46: mad r1.w, -cb0[9].y, l(0.960000), l(0.960000)
  47: mul r6.xyz, r1.wwww, cb0[8].xyzx
  48: add r1.w, -cb0[9].x, l(1.000000)
  49: mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
  50: dp3 r0.w, r0.xyzx, r0.xyzx
  51: max r0.w, r0.w, l(0.001000)
  52: rsq r0.w, r0.w
  53: mul r0.xyz, r0.wwww, r0.xyzx
  54: dp3 r0.w, r4.xyzx, r2.xyzx
  55: dp3_sat r2.x, r4.xyzx, r1.xyzx
  56: dp3_sat r2.y, r4.xyzx, r0.xyzx
  57: dp3_sat r0.x, r1.xyzx, r0.xyzx
  58: mul r0.y, r0.x, r0.x
  59: dp2 r0.y, r0.yyyy, r1.wwww
  60: add r0.y, r0.y, l(-0.500000)
  61: add r0.z, -r2.x, l(1.000000)
  62: mul r1.x, r0.z, r0.z
  63: mul r1.x, r1.x, r1.x
  64: mul r0.z, r0.z, r1.x
  65: mad r0.z, r0.y, r0.z, l(1.000000)
  66: add r1.x, -|r0.w|, l(1.000000)
  67: mul r1.y, r1.x, r1.x
  68: mul r1.y, r1.y, r1.y
  69: mul r1.x, r1.x, r1.y
  70: mad r0.y, r0.y, r1.x, l(1.000000)
  71: mul r0.y, r0.y, r0.z
  72: mul r0.z, r1.w, r1.w
  73: mad r1.x, -r1.w, r1.w, l(1.000000)
  74: mad r1.y, |r0.w|, r1.x, r0.z
  75: mad r1.x, r2.x, r1.x, r0.z
  76: mul r0.w, |r0.w|, r1.x
  77: mad r0.w, r2.x, r1.y, r0.w
  78: add r0.w, r0.w, l(0.000010)
  79: div r0.w, l(0.500000), r0.w
  80: mul r0.z, r0.z, r0.z
  81: mad r1.x, r2.y, r0.z, -r2.y
  82: mad r1.x, r1.x, r2.y, l(1.000000)
  83: mul r0.z, r0.z, l(0.318310)
  84: mad r1.x, r1.x, r1.x, l(0.000000)
  85: div r0.z, r0.z, r1.x
  86: mul r0.z, r0.z, r0.w
  87: mul r0.z, r0.z, l(3.141593)
  88: mul r0.yz, r2.xxxx, r0.yyzy
  89: max r0.z, r0.z, l(0.000000)
  90: dp3 r0.w, r5.xyzx, r5.xyzx
  91: ne r0.w, r0.w, l(0.000000)
  92: and r0.w, r0.w, l(0x3f800000)
  93: mul r0.z, r0.w, r0.z
  94: mul r1.xyz, r0.yyyy, r3.xyzx
  95: mul r0.yzw, r3.xxyz, r0.zzzz
  96: add r0.x, -r0.x, l(1.000000)
  97: mul r1.w, r0.x, r0.x
  98: mul r1.w, r1.w, r1.w
  99: mul r0.x, r0.x, r1.w
 100: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 101: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 102: mul r0.xyz, r0.yzwy, r2.xyzx
 103: mad o0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
 104: mov o0.w, l(1.000000)
 105: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT_COOKIE 
-- Vertex shader for "d3d11":
// Stats: 15 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"

Constant Buffer "UnityPerDraw" (160 bytes) on slot 0 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 1 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xy          3     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb0[1].xyzw
   1: mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb0[3].xyzw
   4: mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb1[18].xyzw
   6: mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
   8: mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
   9: dp3 r0.x, v2.xyzx, cb0[4].xyzx
  10: dp3 r0.y, v2.xyzx, cb0[5].xyzx
  11: dp3 r0.z, v2.xyzx, cb0[6].xyzx
  12: dp3 r0.w, r0.xyzx, r0.xyzx
  13: rsq r0.w, r0.w
  14: mul o1.xyz, r0.wwww, r0.xyzx
  15: mov o3.xy, l(0,0,0,0)
  16: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 91 math, 7 temp registers, 3 textures, 2 branches
Set 2D Texture "_LightTextureB0" to slot 0 sampler slot 2
Set CUBE Texture "_LightTexture0" to slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (160 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _BaseColor at 128
  Float _Glossiness at 144
  Float _Metallic at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xy          3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texturecube (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, -v2.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v2.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, r2.xyzx
   8: mul r3.xyz, v2.yyyy, cb0[5].xyzx
   9: mad r3.xyz, cb0[4].xyzx, v2.xxxx, r3.xyzx
  10: mad r3.xyz, cb0[6].xyzx, v2.zzzz, r3.xyzx
  11: add r3.xyz, r3.xyzx, cb0[7].xyzx
  12: eq r1.w, cb3[0].x, l(1.000000)
  13: if_nz r1.w
  14:   eq r1.w, cb3[0].y, l(1.000000)
  15:   mul r4.xyz, v2.yyyy, cb3[2].xyzx
  16:   mad r4.xyz, cb3[1].xyzx, v2.xxxx, r4.xyzx
  17:   mad r4.xyz, cb3[3].xyzx, v2.zzzz, r4.xyzx
  18:   add r4.xyz, r4.xyzx, cb3[4].xyzx
  19:   movc r4.xyz, r1.wwww, r4.xyzx, v2.xyzx
  20:   add r4.xyz, r4.xyzx, -cb3[6].xyzx
  21:   mul r4.yzw, r4.xxyz, cb3[5].xxyz
  22:   mad r1.w, r4.y, l(0.250000), l(0.750000)
  23:   mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
  24:   max r4.x, r1.w, r2.w
  25:   sample r4.xyzw, r4.xzwx, t2.xyzw, s0
  26: else 
  27:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  28: endif 
  29: dp4_sat r1.w, r4.xyzw, cb2[45].xyzw
  30: dp3 r2.w, r3.xyzx, r3.xyzx
  31: sample r4.xyzw, r2.wwww, t0.xyzw, s2
  32: sample r3.xyzw, r3.xyzx, t1.xyzw, s1
  33: mul r2.w, r3.w, r4.x
  34: mul r1.w, r1.w, r2.w
  35: mul r3.xyz, r1.wwww, cb0[2].xyzx
  36: dp3 r1.w, v1.xyzx, v1.xyzx
  37: rsq r1.w, r1.w
  38: mul r4.xyz, r1.wwww, v1.xyzx
  39: add r5.xyz, cb0[8].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
  40: mad r5.xyz, cb0[9].yyyy, r5.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
  41: mad r1.w, -cb0[9].y, l(0.960000), l(0.960000)
  42: mul r6.xyz, r1.wwww, cb0[8].xyzx
  43: add r1.w, -cb0[9].x, l(1.000000)
  44: mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
  45: dp3 r0.w, r0.xyzx, r0.xyzx
  46: max r0.w, r0.w, l(0.001000)
  47: rsq r0.w, r0.w
  48: mul r0.xyz, r0.wwww, r0.xyzx
  49: dp3 r0.w, r4.xyzx, r2.xyzx
  50: dp3_sat r2.x, r4.xyzx, r1.xyzx
  51: dp3_sat r2.y, r4.xyzx, r0.xyzx
  52: dp3_sat r0.x, r1.xyzx, r0.xyzx
  53: mul r0.y, r0.x, r0.x
  54: dp2 r0.y, r0.yyyy, r1.wwww
  55: add r0.y, r0.y, l(-0.500000)
  56: add r0.z, -r2.x, l(1.000000)
  57: mul r1.x, r0.z, r0.z
  58: mul r1.x, r1.x, r1.x
  59: mul r0.z, r0.z, r1.x
  60: mad r0.z, r0.y, r0.z, l(1.000000)
  61: add r1.x, -|r0.w|, l(1.000000)
  62: mul r1.y, r1.x, r1.x
  63: mul r1.y, r1.y, r1.y
  64: mul r1.x, r1.x, r1.y
  65: mad r0.y, r0.y, r1.x, l(1.000000)
  66: mul r0.y, r0.y, r0.z
  67: mul r0.z, r1.w, r1.w
  68: mad r1.x, -r1.w, r1.w, l(1.000000)
  69: mad r1.y, |r0.w|, r1.x, r0.z
  70: mad r1.x, r2.x, r1.x, r0.z
  71: mul r0.w, |r0.w|, r1.x
  72: mad r0.w, r2.x, r1.y, r0.w
  73: add r0.w, r0.w, l(0.000010)
  74: div r0.w, l(0.500000), r0.w
  75: mul r0.z, r0.z, r0.z
  76: mad r1.x, r2.y, r0.z, -r2.y
  77: mad r1.x, r1.x, r2.y, l(1.000000)
  78: mul r0.z, r0.z, l(0.318310)
  79: mad r1.x, r1.x, r1.x, l(0.000000)
  80: div r0.z, r0.z, r1.x
  81: mul r0.z, r0.z, r0.w
  82: mul r0.z, r0.z, l(3.141593)
  83: mul r0.yz, r2.xxxx, r0.yyzy
  84: max r0.z, r0.z, l(0.000000)
  85: dp3 r0.w, r5.xyzx, r5.xyzx
  86: ne r0.w, r0.w, l(0.000000)
  87: and r0.w, r0.w, l(0x3f800000)
  88: mul r0.z, r0.w, r0.z
  89: mul r1.xyz, r0.yyyy, r3.xyzx
  90: mul r0.yzw, r3.xxyz, r0.zzzz
  91: add r0.x, -r0.x, l(1.000000)
  92: mul r1.w, r0.x, r0.x
  93: mul r1.w, r1.w, r1.w
  94: mul r0.x, r0.x, r1.w
  95: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  96: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
  97: mul r0.xyz, r0.yzwy, r2.xyzx
  98: mad o0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
  99: mov o0.w, l(1.000000)
 100: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 15 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"

Constant Buffer "UnityPerDraw" (160 bytes) on slot 0 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 1 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xy          3     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb0[1].xyzw
   1: mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb0[3].xyzw
   4: mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb1[18].xyzw
   6: mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
   8: mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
   9: dp3 r0.x, v2.xyzx, cb0[4].xyzx
  10: dp3 r0.y, v2.xyzx, cb0[5].xyzx
  11: dp3 r0.z, v2.xyzx, cb0[6].xyzx
  12: dp3 r0.w, r0.xyzx, r0.xyzx
  13: rsq r0.w, r0.w
  14: mul o1.xyz, r0.wwww, r0.xyzx
  15: mov o3.xy, l(0,0,0,0)
  16: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 85 math, 6 temp registers, 2 textures, 2 branches
Set 2D Texture "_LightTexture0" to slot 0 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 1 sampler slot 0

Constant Buffer "$Globals" (160 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _BaseColor at 128
  Float _Glossiness at 144
  Float _Metallic at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xy          3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture3d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: add r0.xyz, -v2.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: mul r2.xy, v2.yyyy, cb0[5].xyxx
   5: mad r2.xy, cb0[4].xyxx, v2.xxxx, r2.xyxx
   6: mad r2.xy, cb0[6].xyxx, v2.zzzz, r2.xyxx
   7: add r2.xy, r2.xyxx, cb0[7].xyxx
   8: eq r1.w, cb3[0].x, l(1.000000)
   9: if_nz r1.w
  10:   eq r1.w, cb3[0].y, l(1.000000)
  11:   mul r3.xyz, v2.yyyy, cb3[2].xyzx
  12:   mad r3.xyz, cb3[1].xyzx, v2.xxxx, r3.xyzx
  13:   mad r3.xyz, cb3[3].xyzx, v2.zzzz, r3.xyzx
  14:   add r3.xyz, r3.xyzx, cb3[4].xyzx
  15:   movc r3.xyz, r1.wwww, r3.xyzx, v2.xyzx
  16:   add r3.xyz, r3.xyzx, -cb3[6].xyzx
  17:   mul r3.yzw, r3.xxyz, cb3[5].xxyz
  18:   mad r1.w, r3.y, l(0.250000), l(0.750000)
  19:   mad r2.z, cb3[0].z, l(0.500000), l(0.750000)
  20:   max r3.x, r1.w, r2.z
  21:   sample r3.xyzw, r3.xzwx, t1.xyzw, s0
  22: else 
  23:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  24: endif 
  25: dp4_sat r1.w, r3.xyzw, cb2[45].xyzw
  26: sample r2.xyzw, r2.xyxx, t0.xyzw, s1
  27: mul r1.w, r1.w, r2.w
  28: mul r2.xyz, r1.wwww, cb0[2].xyzx
  29: dp3 r1.w, v1.xyzx, v1.xyzx
  30: rsq r1.w, r1.w
  31: mul r3.xyz, r1.wwww, v1.xyzx
  32: add r4.xyz, cb0[8].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
  33: mad r4.xyz, cb0[9].yyyy, r4.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
  34: mad r1.w, -cb0[9].y, l(0.960000), l(0.960000)
  35: mul r5.xyz, r1.wwww, cb0[8].xyzx
  36: add r1.w, -cb0[9].x, l(1.000000)
  37: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
  38: dp3 r0.w, r0.xyzx, r0.xyzx
  39: max r0.w, r0.w, l(0.001000)
  40: rsq r0.w, r0.w
  41: mul r0.xyz, r0.wwww, r0.xyzx
  42: dp3 r0.w, r3.xyzx, r1.xyzx
  43: dp3_sat r1.x, r3.xyzx, cb2[0].xyzx
  44: dp3_sat r1.y, r3.xyzx, r0.xyzx
  45: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
  46: mul r0.y, r0.x, r0.x
  47: dp2 r0.y, r0.yyyy, r1.wwww
  48: add r0.y, r0.y, l(-0.500000)
  49: add r0.z, -r1.x, l(1.000000)
  50: mul r1.z, r0.z, r0.z
  51: mul r1.z, r1.z, r1.z
  52: mul r0.z, r0.z, r1.z
  53: mad r0.z, r0.y, r0.z, l(1.000000)
  54: add r1.z, -|r0.w|, l(1.000000)
  55: mul r2.w, r1.z, r1.z
  56: mul r2.w, r2.w, r2.w
  57: mul r1.z, r1.z, r2.w
  58: mad r0.y, r0.y, r1.z, l(1.000000)
  59: mul r0.y, r0.y, r0.z
  60: mul r0.z, r1.w, r1.w
  61: mad r1.z, -r1.w, r1.w, l(1.000000)
  62: mad r1.w, |r0.w|, r1.z, r0.z
  63: mad r1.z, r1.x, r1.z, r0.z
  64: mul r0.w, |r0.w|, r1.z
  65: mad r0.w, r1.x, r1.w, r0.w
  66: add r0.w, r0.w, l(0.000010)
  67: div r0.w, l(0.500000), r0.w
  68: mul r0.z, r0.z, r0.z
  69: mad r1.z, r1.y, r0.z, -r1.y
  70: mad r1.y, r1.z, r1.y, l(1.000000)
  71: mul r0.z, r0.z, l(0.318310)
  72: mad r1.y, r1.y, r1.y, l(0.000000)
  73: div r0.z, r0.z, r1.y
  74: mul r0.z, r0.z, r0.w
  75: mul r0.z, r0.z, l(3.141593)
  76: mul r0.yz, r1.xxxx, r0.yyzy
  77: max r0.z, r0.z, l(0.000000)
  78: dp3 r0.w, r4.xyzx, r4.xyzx
  79: ne r0.w, r0.w, l(0.000000)
  80: and r0.w, r0.w, l(0x3f800000)
  81: mul r0.z, r0.w, r0.z
  82: mul r1.xyz, r0.yyyy, r2.xyzx
  83: mul r0.yzw, r2.xxyz, r0.zzzz
  84: add r0.x, -r0.x, l(1.000000)
  85: mul r1.w, r0.x, r0.x
  86: mul r1.w, r1.w, r1.w
  87: mul r0.x, r0.x, r1.w
  88: add r2.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  89: mad r2.xyz, r2.xyzx, r0.xxxx, r4.xyzx
  90: mul r0.xyz, r0.yzwy, r2.xyzx
  91: mad o0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
  92: mov o0.w, l(1.000000)
  93: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: SPOT SHADOWS_DEPTH 
-- Vertex shader for "d3d11":
// Stats: 15 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"

Constant Buffer "UnityPerDraw" (160 bytes) on slot 0 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 1 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xy          3     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb0[1].xyzw
   1: mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb0[3].xyzw
   4: mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb1[18].xyzw
   6: mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
   8: mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
   9: dp3 r0.x, v2.xyzx, cb0[4].xyzx
  10: dp3 r0.y, v2.xyzx, cb0[5].xyzx
  11: dp3 r0.z, v2.xyzx, cb0[6].xyzx
  12: dp3 r0.w, r0.xyzx, r0.xyzx
  13: rsq r0.w, r0.w
  14: mul o1.xyz, r0.wwww, r0.xyzx
  15: mov o3.xy, l(0,0,0,0)
  16: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 112 math, 7 temp registers, 3 textures, 2 branches
Set 2D Texture "_LightTexture0" to slot 0 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 3 sampler slot 1

Constant Buffer "$Globals" (160 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _BaseColor at 128
  Float _Glossiness at 144
  Float _Metallic at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xy          3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, -v2.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v2.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: mul r4.xyzw, v2.yyyy, cb0[5].xyzw
   9: mad r4.xyzw, cb0[4].xyzw, v2.xxxx, r4.xyzw
  10: mad r4.xyzw, cb0[6].xyzw, v2.zzzz, r4.xyzw
  11: add r4.xyzw, r4.xyzw, cb0[7].xyzw
  12: mov r5.x, cb4[9].z
  13: mov r5.y, cb4[10].z
  14: mov r5.z, cb4[11].z
  15: dp3 r1.w, r2.xyzx, r5.xyzx
  16: add r2.xyz, v2.xyzx, -cb3[25].xyzx
  17: dp3 r2.x, r2.xyzx, r2.xyzx
  18: sqrt r2.x, r2.x
  19: add r2.x, -r1.w, r2.x
  20: mad r1.w, cb3[25].w, r2.x, r1.w
  21: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  22: eq r2.x, cb5[0].x, l(1.000000)
  23: if_nz r2.x
  24:   eq r2.y, cb5[0].y, l(1.000000)
  25:   mul r5.xyz, v2.yyyy, cb5[2].xyzx
  26:   mad r5.xyz, cb5[1].xyzx, v2.xxxx, r5.xyzx
  27:   mad r5.xyz, cb5[3].xyzx, v2.zzzz, r5.xyzx
  28:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  29:   movc r2.yzw, r2.yyyy, r5.xxyz, v2.xxyz
  30:   add r2.yzw, r2.yyzw, -cb5[6].xxyz
  31:   mul r5.yzw, r2.yyzw, cb5[5].xxyz
  32:   mad r2.y, r5.y, l(0.250000), l(0.750000)
  33:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
  34:   max r5.x, r2.z, r2.y
  35:   sample r5.xyzw, r5.xzwx, t2.xyzw, s0
  36: else 
  37:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  38: endif 
  39: dp4_sat r2.y, r5.xyzw, cb2[45].xyzw
  40: mul r5.xyzw, v2.yyyy, cb3[9].xyzw
  41: mad r5.xyzw, cb3[8].xyzw, v2.xxxx, r5.xyzw
  42: mad r5.xyzw, cb3[10].xyzw, v2.zzzz, r5.xyzw
  43: add r5.xyzw, r5.xyzw, cb3[11].xyzw
  44: div r5.xyz, r5.xyzx, r5.wwww
  45: sample_c_lz r2.z, r5.xyxx, t3.xxxx, s1, r5.z
  46: add r2.w, -cb3[24].x, l(1.000000)
  47: mad r2.z, r2.z, r2.w, cb3[24].x
  48: add_sat r1.w, r1.w, r2.z
  49: min r2.y, r1.w, r2.y
  50: movc r1.w, r2.x, r2.y, r1.w
  51: lt r2.x, l(0.000000), r4.z
  52: and r2.x, r2.x, l(0x3f800000)
  53: div r2.yz, r4.xxyx, r4.wwww
  54: add r2.yz, r2.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
  55: sample r5.xyzw, r2.yzyy, t0.xyzw, s2
  56: mul r2.x, r2.x, r5.w
  57: dp3 r2.y, r4.xyzx, r4.xyzx
  58: sample r4.xyzw, r2.yyyy, t1.xyzw, s3
  59: mul r2.x, r2.x, r4.x
  60: mul r1.w, r1.w, r2.x
  61: mul r2.xyz, r1.wwww, cb0[2].xyzx
  62: dp3 r1.w, v1.xyzx, v1.xyzx
  63: rsq r1.w, r1.w
  64: mul r4.xyz, r1.wwww, v1.xyzx
  65: add r5.xyz, cb0[8].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
  66: mad r5.xyz, cb0[9].yyyy, r5.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
  67: mad r1.w, -cb0[9].y, l(0.960000), l(0.960000)
  68: mul r6.xyz, r1.wwww, cb0[8].xyzx
  69: add r1.w, -cb0[9].x, l(1.000000)
  70: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
  71: dp3 r0.w, r0.xyzx, r0.xyzx
  72: max r0.w, r0.w, l(0.001000)
  73: rsq r0.w, r0.w
  74: mul r0.xyz, r0.wwww, r0.xyzx
  75: dp3 r0.w, r4.xyzx, r3.xyzx
  76: dp3_sat r2.w, r4.xyzx, r1.xyzx
  77: dp3_sat r3.x, r4.xyzx, r0.xyzx
  78: dp3_sat r0.x, r1.xyzx, r0.xyzx
  79: mul r0.y, r0.x, r0.x
  80: dp2 r0.y, r0.yyyy, r1.wwww
  81: add r0.y, r0.y, l(-0.500000)
  82: add r0.z, -r2.w, l(1.000000)
  83: mul r1.x, r0.z, r0.z
  84: mul r1.x, r1.x, r1.x
  85: mul r0.z, r0.z, r1.x
  86: mad r0.z, r0.y, r0.z, l(1.000000)
  87: add r1.x, -|r0.w|, l(1.000000)
  88: mul r1.y, r1.x, r1.x
  89: mul r1.y, r1.y, r1.y
  90: mul r1.x, r1.x, r1.y
  91: mad r0.y, r0.y, r1.x, l(1.000000)
  92: mul r0.y, r0.y, r0.z
  93: mul r0.z, r1.w, r1.w
  94: mad r1.x, -r1.w, r1.w, l(1.000000)
  95: mad r1.y, |r0.w|, r1.x, r0.z
  96: mad r1.x, r2.w, r1.x, r0.z
  97: mul r0.w, |r0.w|, r1.x
  98: mad r0.w, r2.w, r1.y, r0.w
  99: add r0.w, r0.w, l(0.000010)
 100: div r0.w, l(0.500000), r0.w
 101: mul r0.z, r0.z, r0.z
 102: mad r1.x, r3.x, r0.z, -r3.x
 103: mad r1.x, r1.x, r3.x, l(1.000000)
 104: mul r0.z, r0.z, l(0.318310)
 105: mad r1.x, r1.x, r1.x, l(0.000000)
 106: div r0.z, r0.z, r1.x
 107: mul r0.z, r0.z, r0.w
 108: mul r0.z, r0.z, l(3.141593)
 109: mul r0.yz, r2.wwww, r0.yyzy
 110: max r0.z, r0.z, l(0.000000)
 111: dp3 r0.w, r5.xyzx, r5.xyzx
 112: ne r0.w, r0.w, l(0.000000)
 113: and r0.w, r0.w, l(0x3f800000)
 114: mul r0.z, r0.w, r0.z
 115: mul r1.xyz, r0.yyyy, r2.xyzx
 116: mul r0.yzw, r2.xxyz, r0.zzzz
 117: add r0.x, -r0.x, l(1.000000)
 118: mul r1.w, r0.x, r0.x
 119: mul r1.w, r1.w, r1.w
 120: mul r0.x, r0.x, r1.w
 121: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 122: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 123: mul r0.xyz, r0.yzwy, r2.xyzx
 124: mad o0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
 125: mov o0.w, l(1.000000)
 126: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: SPOT SHADOWS_DEPTH SHADOWS_SOFT 
-- Vertex shader for "d3d11":
// Stats: 15 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"

Constant Buffer "UnityPerDraw" (160 bytes) on slot 0 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 1 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xy          3     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb0[1].xyzw
   1: mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb0[3].xyzw
   4: mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb1[18].xyzw
   6: mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
   8: mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
   9: dp3 r0.x, v2.xyzx, cb0[4].xyzx
  10: dp3 r0.y, v2.xyzx, cb0[5].xyzx
  11: dp3 r0.z, v2.xyzx, cb0[6].xyzx
  12: dp3 r0.w, r0.xyzx, r0.xyzx
  13: rsq r0.w, r0.w
  14: mul o1.xyz, r0.wwww, r0.xyzx
  15: mov o3.xy, l(0,0,0,0)
  16: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 141 math, 10 temp registers, 3 textures, 4 branches
Set 2D Texture "_LightTexture0" to slot 0 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 3 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 144
  Vector4 _LightColor0 at 32
  Vector4 _ShadowMapTexture_TexelSize at 128
  Vector4 _BaseColor at 208
  Float _Glossiness at 224
  Float _Metallic at 228
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xy          3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_output o0.xyzw
      dcl_temps 10
   0: add r0.xyz, -v2.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v2.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: mul r4.xyzw, v2.yyyy, cb0[10].xyzw
   9: mad r4.xyzw, cb0[9].xyzw, v2.xxxx, r4.xyzw
  10: mad r4.xyzw, cb0[11].xyzw, v2.zzzz, r4.xyzw
  11: add r4.xyzw, r4.xyzw, cb0[12].xyzw
  12: mov r5.x, cb4[9].z
  13: mov r5.y, cb4[10].z
  14: mov r5.z, cb4[11].z
  15: dp3 r1.w, r2.xyzx, r5.xyzx
  16: add r2.xyz, v2.xyzx, -cb3[25].xyzx
  17: dp3 r2.x, r2.xyzx, r2.xyzx
  18: sqrt r2.x, r2.x
  19: add r2.x, -r1.w, r2.x
  20: mad r1.w, cb3[25].w, r2.x, r1.w
  21: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  22: eq r2.x, cb5[0].x, l(1.000000)
  23: if_nz r2.x
  24:   eq r2.y, cb5[0].y, l(1.000000)
  25:   mul r5.xyz, v2.yyyy, cb5[2].xyzx
  26:   mad r5.xyz, cb5[1].xyzx, v2.xxxx, r5.xyzx
  27:   mad r5.xyz, cb5[3].xyzx, v2.zzzz, r5.xyzx
  28:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  29:   movc r2.yzw, r2.yyyy, r5.xxyz, v2.xxyz
  30:   add r2.yzw, r2.yyzw, -cb5[6].xxyz
  31:   mul r5.yzw, r2.yyzw, cb5[5].xxyz
  32:   mad r2.y, r5.y, l(0.250000), l(0.750000)
  33:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
  34:   max r5.x, r2.z, r2.y
  35:   sample r5.xyzw, r5.xzwx, t2.xyzw, s0
  36: else 
  37:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  38: endif 
  39: dp4_sat r2.y, r5.xyzw, cb2[45].xyzw
  40: lt r2.z, r1.w, l(0.990000)
  41: if_nz r2.z
  42:   mul r5.xyzw, v2.yyyy, cb3[9].xyzw
  43:   mad r5.xyzw, cb3[8].xyzw, v2.xxxx, r5.xyzw
  44:   mad r5.xyzw, cb3[10].xyzw, v2.zzzz, r5.xyzw
  45:   add r5.xyzw, r5.xyzw, cb3[11].xyzw
  46:   div r5.xyz, r5.xyzx, r5.wwww
  47:   mad r2.zw, r5.xxxy, cb0[8].zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
  48:   round_ni r2.zw, r2.zzzw
  49:   mad r5.xy, r5.xyxx, cb0[8].zwzz, -r2.zwzz
  50:   add r6.xyzw, r5.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  51:   mul r7.xw, r6.xxxz, r6.xxxz
  52:   mad r6.xz, r7.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000), -r5.xxyx
  53:   add r8.xy, -r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  54:   min r8.zw, r5.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  55:   mad r8.xy, -r8.zwzz, r8.zwzz, r8.xyxx
  56:   max r5.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  57:   mad r5.xy, -r5.xyxx, r5.xyxx, r6.ywyy
  58:   mov r9.x, r6.x
  59:   mov r9.y, r8.x
  60:   mov r9.z, r5.x
  61:   mov r9.w, r7.x
  62:   mul r9.xyzw, r9.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  63:   mov r7.x, r6.z
  64:   mov r7.y, r8.y
  65:   mov r7.z, r5.y
  66:   mul r6.xyzw, r7.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  67:   add r7.xyzw, r9.ywyw, r9.xzxz
  68:   add r8.xyzw, r6.yyww, r6.xxzz
  69:   div r5.xy, r9.ywyy, r7.zwzz
  70:   add r5.xy, r5.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
  71:   div r6.xy, r6.ywyy, r8.ywyy
  72:   add r6.xy, r6.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
  73:   mul r9.xy, r5.xyxx, cb0[8].xxxx
  74:   mul r9.zw, r6.xxxy, cb0[8].yyyy
  75:   mul r6.xyzw, r7.xyzw, r8.xyzw
  76:   mad r7.xyzw, r2.zwzw, cb0[8].xyxy, r9.xzyz
  77:   sample_c_lz r3.w, r7.xyxx, t3.xxxx, s1, r5.z
  78:   sample_c_lz r5.x, r7.zwzz, t3.xxxx, s1, r5.z
  79:   mul r5.x, r5.x, r6.y
  80:   mad r3.w, r6.x, r3.w, r5.x
  81:   mad r7.xyzw, r2.zwzw, cb0[8].xyxy, r9.xwyw
  82:   sample_c_lz r2.z, r7.xyxx, t3.xxxx, s1, r5.z
  83:   mad r2.z, r6.z, r2.z, r3.w
  84:   sample_c_lz r2.w, r7.zwzz, t3.xxxx, s1, r5.z
  85:   mad r2.z, r6.w, r2.w, r2.z
  86:   add r2.w, -cb3[24].x, l(1.000000)
  87:   mad r2.z, r2.z, r2.w, cb3[24].x
  88: else 
  89:   mov r2.z, l(1.000000)
  90: endif 
  91: add_sat r1.w, r1.w, r2.z
  92: min r2.y, r1.w, r2.y
  93: movc r1.w, r2.x, r2.y, r1.w
  94: lt r2.x, l(0.000000), r4.z
  95: and r2.x, r2.x, l(0x3f800000)
  96: div r2.yz, r4.xxyx, r4.wwww
  97: add r2.yz, r2.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
  98: sample r5.xyzw, r2.yzyy, t0.xyzw, s2
  99: mul r2.x, r2.x, r5.w
 100: dp3 r2.y, r4.xyzx, r4.xyzx
 101: sample r4.xyzw, r2.yyyy, t1.xyzw, s3
 102: mul r2.x, r2.x, r4.x
 103: mul r1.w, r1.w, r2.x
 104: mul r2.xyz, r1.wwww, cb0[2].xyzx
 105: dp3 r1.w, v1.xyzx, v1.xyzx
 106: rsq r1.w, r1.w
 107: mul r4.xyz, r1.wwww, v1.xyzx
 108: add r5.xyz, cb0[13].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
 109: mad r5.xyz, cb0[14].yyyy, r5.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
 110: mad r1.w, -cb0[14].y, l(0.960000), l(0.960000)
 111: mul r6.xyz, r1.wwww, cb0[13].xyzx
 112: add r1.w, -cb0[14].x, l(1.000000)
 113: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
 114: dp3 r0.w, r0.xyzx, r0.xyzx
 115: max r0.w, r0.w, l(0.001000)
 116: rsq r0.w, r0.w
 117: mul r0.xyz, r0.wwww, r0.xyzx
 118: dp3 r0.w, r4.xyzx, r3.xyzx
 119: dp3_sat r2.w, r4.xyzx, r1.xyzx
 120: dp3_sat r3.x, r4.xyzx, r0.xyzx
 121: dp3_sat r0.x, r1.xyzx, r0.xyzx
 122: mul r0.y, r0.x, r0.x
 123: dp2 r0.y, r0.yyyy, r1.wwww
 124: add r0.y, r0.y, l(-0.500000)
 125: add r0.z, -r2.w, l(1.000000)
 126: mul r1.x, r0.z, r0.z
 127: mul r1.x, r1.x, r1.x
 128: mul r0.z, r0.z, r1.x
 129: mad r0.z, r0.y, r0.z, l(1.000000)
 130: add r1.x, -|r0.w|, l(1.000000)
 131: mul r1.y, r1.x, r1.x
 132: mul r1.y, r1.y, r1.y
 133: mul r1.x, r1.x, r1.y
 134: mad r0.y, r0.y, r1.x, l(1.000000)
 135: mul r0.y, r0.y, r0.z
 136: mul r0.z, r1.w, r1.w
 137: mad r1.x, -r1.w, r1.w, l(1.000000)
 138: mad r1.y, |r0.w|, r1.x, r0.z
 139: mad r1.x, r2.w, r1.x, r0.z
 140: mul r0.w, |r0.w|, r1.x
 141: mad r0.w, r2.w, r1.y, r0.w
 142: add r0.w, r0.w, l(0.000010)
 143: div r0.w, l(0.500000), r0.w
 144: mul r0.z, r0.z, r0.z
 145: mad r1.x, r3.x, r0.z, -r3.x
 146: mad r1.x, r1.x, r3.x, l(1.000000)
 147: mul r0.z, r0.z, l(0.318310)
 148: mad r1.x, r1.x, r1.x, l(0.000000)
 149: div r0.z, r0.z, r1.x
 150: mul r0.z, r0.z, r0.w
 151: mul r0.z, r0.z, l(3.141593)
 152: mul r0.yz, r2.wwww, r0.yyzy
 153: max r0.z, r0.z, l(0.000000)
 154: dp3 r0.w, r5.xyzx, r5.xyzx
 155: ne r0.w, r0.w, l(0.000000)
 156: and r0.w, r0.w, l(0x3f800000)
 157: mul r0.z, r0.w, r0.z
 158: mul r1.xyz, r0.yyyy, r2.xyzx
 159: mul r0.yzw, r2.xxyz, r0.zzzz
 160: add r0.x, -r0.x, l(1.000000)
 161: mul r1.w, r0.x, r0.x
 162: mul r1.w, r1.w, r1.w
 163: mul r0.x, r0.x, r1.w
 164: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 165: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 166: mul r0.xyz, r0.yzwy, r2.xyzx
 167: mad o0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
 168: mov o0.w, l(1.000000)
 169: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 18 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"

Constant Buffer "UnityPerCamera" (144 bytes) on slot 0 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb2[18].xyzw
   6: mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
   8: mad r0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: dp3 r1.x, v2.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v2.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v2.xyzx, cb1[6].xyzx
  13: dp3 r1.w, r1.xyzx, r1.xyzx
  14: rsq r1.w, r1.w
  15: mul o1.xyz, r1.wwww, r1.xyzx
  16: mul r0.y, r0.y, cb0[5].x
  17: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  18: mov o3.zw, r0.zzzw
  19: add o3.xy, r1.zzzz, r1.xwxx
  20: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 90 math, 6 temp registers, 2 textures, 2 branches
Set 2D Texture "_ShadowMapTexture" to slot 0 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 1 sampler slot 0

Constant Buffer "$Globals" (96 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _BaseColor at 64
  Float _Glossiness at 80
  Float _Metallic at 84
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture3d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyw
      dcl_output o0.xyzw
      dcl_temps 6
   0: add r0.xyz, -v2.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: mov r2.x, cb4[9].z
   5: mov r2.y, cb4[10].z
   6: mov r2.z, cb4[11].z
   7: dp3 r1.w, r0.xyzx, r2.xyzx
   8: add r2.xyz, v2.xyzx, -cb3[25].xyzx
   9: dp3 r2.x, r2.xyzx, r2.xyzx
  10: sqrt r2.x, r2.x
  11: add r2.x, -r1.w, r2.x
  12: mad r1.w, cb3[25].w, r2.x, r1.w
  13: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  14: eq r2.x, cb5[0].x, l(1.000000)
  15: if_nz r2.x
  16:   eq r2.y, cb5[0].y, l(1.000000)
  17:   mul r3.xyz, v2.yyyy, cb5[2].xyzx
  18:   mad r3.xyz, cb5[1].xyzx, v2.xxxx, r3.xyzx
  19:   mad r3.xyz, cb5[3].xyzx, v2.zzzz, r3.xyzx
  20:   add r3.xyz, r3.xyzx, cb5[4].xyzx
  21:   movc r2.yzw, r2.yyyy, r3.xxyz, v2.xxyz
  22:   add r2.yzw, r2.yyzw, -cb5[6].xxyz
  23:   mul r3.yzw, r2.yyzw, cb5[5].xxyz
  24:   mad r2.y, r3.y, l(0.250000), l(0.750000)
  25:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
  26:   max r3.x, r2.z, r2.y
  27:   sample r3.xyzw, r3.xzwx, t1.xyzw, s0
  28: else 
  29:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  30: endif 
  31: dp4_sat r2.y, r3.xyzw, cb2[45].xyzw
  32: div r2.zw, v3.xxxy, v3.wwww
  33: sample r3.xyzw, r2.zwzz, t0.xyzw, s1
  34: add_sat r1.w, r1.w, r3.x
  35: min r2.y, r1.w, r2.y
  36: movc r1.w, r2.x, r2.y, r1.w
  37: mul r2.xyz, r1.wwww, cb0[2].xyzx
  38: dp3 r1.w, v1.xyzx, v1.xyzx
  39: rsq r1.w, r1.w
  40: mul r3.xyz, r1.wwww, v1.xyzx
  41: add r4.xyz, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
  42: mad r4.xyz, cb0[5].yyyy, r4.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
  43: mad r1.w, -cb0[5].y, l(0.960000), l(0.960000)
  44: mul r5.xyz, r1.wwww, cb0[4].xyzx
  45: add r1.w, -cb0[5].x, l(1.000000)
  46: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
  47: dp3 r0.w, r0.xyzx, r0.xyzx
  48: max r0.w, r0.w, l(0.001000)
  49: rsq r0.w, r0.w
  50: mul r0.xyz, r0.wwww, r0.xyzx
  51: dp3 r0.w, r3.xyzx, r1.xyzx
  52: dp3_sat r1.x, r3.xyzx, cb2[0].xyzx
  53: dp3_sat r1.y, r3.xyzx, r0.xyzx
  54: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
  55: mul r0.y, r0.x, r0.x
  56: dp2 r0.y, r0.yyyy, r1.wwww
  57: add r0.y, r0.y, l(-0.500000)
  58: add r0.z, -r1.x, l(1.000000)
  59: mul r1.z, r0.z, r0.z
  60: mul r1.z, r1.z, r1.z
  61: mul r0.z, r0.z, r1.z
  62: mad r0.z, r0.y, r0.z, l(1.000000)
  63: add r1.z, -|r0.w|, l(1.000000)
  64: mul r2.w, r1.z, r1.z
  65: mul r2.w, r2.w, r2.w
  66: mul r1.z, r1.z, r2.w
  67: mad r0.y, r0.y, r1.z, l(1.000000)
  68: mul r0.y, r0.y, r0.z
  69: mul r0.z, r1.w, r1.w
  70: mad r1.z, -r1.w, r1.w, l(1.000000)
  71: mad r1.w, |r0.w|, r1.z, r0.z
  72: mad r1.z, r1.x, r1.z, r0.z
  73: mul r0.w, |r0.w|, r1.z
  74: mad r0.w, r1.x, r1.w, r0.w
  75: add r0.w, r0.w, l(0.000010)
  76: div r0.w, l(0.500000), r0.w
  77: mul r0.z, r0.z, r0.z
  78: mad r1.z, r1.y, r0.z, -r1.y
  79: mad r1.y, r1.z, r1.y, l(1.000000)
  80: mul r0.z, r0.z, l(0.318310)
  81: mad r1.y, r1.y, r1.y, l(0.000000)
  82: div r0.z, r0.z, r1.y
  83: mul r0.z, r0.z, r0.w
  84: mul r0.z, r0.z, l(3.141593)
  85: mul r0.yz, r1.xxxx, r0.yyzy
  86: max r0.z, r0.z, l(0.000000)
  87: dp3 r0.w, r4.xyzx, r4.xyzx
  88: ne r0.w, r0.w, l(0.000000)
  89: and r0.w, r0.w, l(0x3f800000)
  90: mul r0.z, r0.w, r0.z
  91: mul r1.xyz, r0.yyyy, r2.xyzx
  92: mul r0.yzw, r2.xxyz, r0.zzzz
  93: add r0.x, -r0.x, l(1.000000)
  94: mul r1.w, r0.x, r0.x
  95: mul r1.w, r1.w, r1.w
  96: mul r0.x, r0.x, r1.w
  97: add r2.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  98: mad r2.xyz, r2.xyzx, r0.xxxx, r4.xyzx
  99: mul r0.xyz, r0.yzwy, r2.xyzx
 100: mad o0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
 101: mov o0.w, l(1.000000)
 102: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL_COOKIE SHADOWS_SCREEN 
-- Vertex shader for "d3d11":
// Stats: 18 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"

Constant Buffer "UnityPerCamera" (144 bytes) on slot 0 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb2[18].xyzw
   6: mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
   8: mad r0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: dp3 r1.x, v2.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v2.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v2.xyzx, cb1[6].xyzx
  13: dp3 r1.w, r1.xyzx, r1.xyzx
  14: rsq r1.w, r1.w
  15: mul o1.xyz, r1.wwww, r1.xyzx
  16: mul r0.y, r0.y, cb0[5].x
  17: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  18: mov o3.zw, r0.zzzw
  19: add o3.xy, r1.zzzz, r1.xwxx
  20: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 95 math, 6 temp registers, 3 textures, 2 branches
Set 2D Texture "_ShadowMapTexture" to slot 0 sampler slot 1
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (160 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _BaseColor at 128
  Float _Glossiness at 144
  Float _Metallic at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyw
      dcl_output o0.xyzw
      dcl_temps 6
   0: add r0.xyz, -v2.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: mul r2.xy, v2.yyyy, cb0[5].xyxx
   5: mad r2.xy, cb0[4].xyxx, v2.xxxx, r2.xyxx
   6: mad r2.xy, cb0[6].xyxx, v2.zzzz, r2.xyxx
   7: add r2.xy, r2.xyxx, cb0[7].xyxx
   8: mov r3.x, cb4[9].z
   9: mov r3.y, cb4[10].z
  10: mov r3.z, cb4[11].z
  11: dp3 r1.w, r0.xyzx, r3.xyzx
  12: add r3.xyz, v2.xyzx, -cb3[25].xyzx
  13: dp3 r2.z, r3.xyzx, r3.xyzx
  14: sqrt r2.z, r2.z
  15: add r2.z, -r1.w, r2.z
  16: mad r1.w, cb3[25].w, r2.z, r1.w
  17: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  18: eq r2.z, cb5[0].x, l(1.000000)
  19: if_nz r2.z
  20:   eq r2.w, cb5[0].y, l(1.000000)
  21:   mul r3.xyz, v2.yyyy, cb5[2].xyzx
  22:   mad r3.xyz, cb5[1].xyzx, v2.xxxx, r3.xyzx
  23:   mad r3.xyz, cb5[3].xyzx, v2.zzzz, r3.xyzx
  24:   add r3.xyz, r3.xyzx, cb5[4].xyzx
  25:   movc r3.xyz, r2.wwww, r3.xyzx, v2.xyzx
  26:   add r3.xyz, r3.xyzx, -cb5[6].xyzx
  27:   mul r3.yzw, r3.xxyz, cb5[5].xxyz
  28:   mad r2.w, r3.y, l(0.250000), l(0.750000)
  29:   mad r3.y, cb5[0].z, l(0.500000), l(0.750000)
  30:   max r3.x, r2.w, r3.y
  31:   sample r3.xyzw, r3.xzwx, t2.xyzw, s0
  32: else 
  33:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  34: endif 
  35: dp4_sat r2.w, r3.xyzw, cb2[45].xyzw
  36: div r3.xy, v3.xyxx, v3.wwww
  37: sample r3.xyzw, r3.xyxx, t0.xyzw, s1
  38: add_sat r1.w, r1.w, r3.x
  39: min r2.w, r1.w, r2.w
  40: movc r1.w, r2.z, r2.w, r1.w
  41: sample r2.xyzw, r2.xyxx, t1.xyzw, s2
  42: mul r1.w, r1.w, r2.w
  43: mul r2.xyz, r1.wwww, cb0[2].xyzx
  44: dp3 r1.w, v1.xyzx, v1.xyzx
  45: rsq r1.w, r1.w
  46: mul r3.xyz, r1.wwww, v1.xyzx
  47: add r4.xyz, cb0[8].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
  48: mad r4.xyz, cb0[9].yyyy, r4.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
  49: mad r1.w, -cb0[9].y, l(0.960000), l(0.960000)
  50: mul r5.xyz, r1.wwww, cb0[8].xyzx
  51: add r1.w, -cb0[9].x, l(1.000000)
  52: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
  53: dp3 r0.w, r0.xyzx, r0.xyzx
  54: max r0.w, r0.w, l(0.001000)
  55: rsq r0.w, r0.w
  56: mul r0.xyz, r0.wwww, r0.xyzx
  57: dp3 r0.w, r3.xyzx, r1.xyzx
  58: dp3_sat r1.x, r3.xyzx, cb2[0].xyzx
  59: dp3_sat r1.y, r3.xyzx, r0.xyzx
  60: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
  61: mul r0.y, r0.x, r0.x
  62: dp2 r0.y, r0.yyyy, r1.wwww
  63: add r0.y, r0.y, l(-0.500000)
  64: add r0.z, -r1.x, l(1.000000)
  65: mul r1.z, r0.z, r0.z
  66: mul r1.z, r1.z, r1.z
  67: mul r0.z, r0.z, r1.z
  68: mad r0.z, r0.y, r0.z, l(1.000000)
  69: add r1.z, -|r0.w|, l(1.000000)
  70: mul r2.w, r1.z, r1.z
  71: mul r2.w, r2.w, r2.w
  72: mul r1.z, r1.z, r2.w
  73: mad r0.y, r0.y, r1.z, l(1.000000)
  74: mul r0.y, r0.y, r0.z
  75: mul r0.z, r1.w, r1.w
  76: mad r1.z, -r1.w, r1.w, l(1.000000)
  77: mad r1.w, |r0.w|, r1.z, r0.z
  78: mad r1.z, r1.x, r1.z, r0.z
  79: mul r0.w, |r0.w|, r1.z
  80: mad r0.w, r1.x, r1.w, r0.w
  81: add r0.w, r0.w, l(0.000010)
  82: div r0.w, l(0.500000), r0.w
  83: mul r0.z, r0.z, r0.z
  84: mad r1.z, r1.y, r0.z, -r1.y
  85: mad r1.y, r1.z, r1.y, l(1.000000)
  86: mul r0.z, r0.z, l(0.318310)
  87: mad r1.y, r1.y, r1.y, l(0.000000)
  88: div r0.z, r0.z, r1.y
  89: mul r0.z, r0.z, r0.w
  90: mul r0.z, r0.z, l(3.141593)
  91: mul r0.yz, r1.xxxx, r0.yyzy
  92: max r0.z, r0.z, l(0.000000)
  93: dp3 r0.w, r4.xyzx, r4.xyzx
  94: ne r0.w, r0.w, l(0.000000)
  95: and r0.w, r0.w, l(0x3f800000)
  96: mul r0.z, r0.w, r0.z
  97: mul r1.xyz, r0.yyyy, r2.xyzx
  98: mul r0.yzw, r2.xxyz, r0.zzzz
  99: add r0.x, -r0.x, l(1.000000)
 100: mul r1.w, r0.x, r0.x
 101: mul r1.w, r1.w, r1.w
 102: mul r0.x, r0.x, r1.w
 103: add r2.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 104: mad r2.xyz, r2.xyzx, r0.xxxx, r4.xyzx
 105: mul r0.xyz, r0.yzwy, r2.xyzx
 106: mad o0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
 107: mov o0.w, l(1.000000)
 108: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT SHADOWS_CUBE 
-- Vertex shader for "d3d11":
// Stats: 15 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"

Constant Buffer "UnityPerDraw" (160 bytes) on slot 0 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 1 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xy          3     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb0[1].xyzw
   1: mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb0[3].xyzw
   4: mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb1[18].xyzw
   6: mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
   8: mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
   9: dp3 r0.x, v2.xyzx, cb0[4].xyzx
  10: dp3 r0.y, v2.xyzx, cb0[5].xyzx
  11: dp3 r0.z, v2.xyzx, cb0[6].xyzx
  12: dp3 r0.w, r0.xyzx, r0.xyzx
  13: rsq r0.w, r0.w
  14: mul o1.xyz, r0.wwww, r0.xyzx
  15: mov o3.xy, l(0,0,0,0)
  16: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 105 math, 7 temp registers, 2 textures, 2 branches
Set CUBE Texture "_ShadowMapTexture" to slot 0 sampler slot 1
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (160 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _BaseColor at 128
  Float _Glossiness at 144
  Float _Metallic at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xy          3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, -v2.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v2.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: mul r4.xyz, v2.yyyy, cb0[5].xyzx
   9: mad r4.xyz, cb0[4].xyzx, v2.xxxx, r4.xyzx
  10: mad r4.xyz, cb0[6].xyzx, v2.zzzz, r4.xyzx
  11: add r4.xyz, r4.xyzx, cb0[7].xyzx
  12: mov r5.x, cb4[9].z
  13: mov r5.y, cb4[10].z
  14: mov r5.z, cb4[11].z
  15: dp3 r1.w, r2.xyzx, r5.xyzx
  16: add r2.xyz, v2.xyzx, -cb3[25].xyzx
  17: dp3 r2.x, r2.xyzx, r2.xyzx
  18: sqrt r2.x, r2.x
  19: add r2.x, -r1.w, r2.x
  20: mad r1.w, cb3[25].w, r2.x, r1.w
  21: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  22: eq r2.x, cb5[0].x, l(1.000000)
  23: if_nz r2.x
  24:   eq r2.y, cb5[0].y, l(1.000000)
  25:   mul r5.xyz, v2.yyyy, cb5[2].xyzx
  26:   mad r5.xyz, cb5[1].xyzx, v2.xxxx, r5.xyzx
  27:   mad r5.xyz, cb5[3].xyzx, v2.zzzz, r5.xyzx
  28:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  29:   movc r2.yzw, r2.yyyy, r5.xxyz, v2.xxyz
  30:   add r2.yzw, r2.yyzw, -cb5[6].xxyz
  31:   mul r5.yzw, r2.yyzw, cb5[5].xxyz
  32:   mad r2.y, r5.y, l(0.250000), l(0.750000)
  33:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
  34:   max r5.x, r2.z, r2.y
  35:   sample r5.xyzw, r5.xzwx, t2.xyzw, s0
  36: else 
  37:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  38: endif 
  39: dp4_sat r2.y, r5.xyzw, cb2[45].xyzw
  40: add r5.xyz, v2.xyzx, -cb2[1].xyzx
  41: dp3 r2.z, r5.xyzx, r5.xyzx
  42: sqrt r2.z, r2.z
  43: mul r2.z, r2.z, cb2[1].w
  44: mul r2.z, r2.z, l(0.970000)
  45: sample_l r5.xyzw, r5.xyzx, t0.xyzw, s1, l(0.000000)
  46: lt r2.z, r5.x, r2.z
  47: movc r2.z, r2.z, cb3[24].x, l(1.000000)
  48: add_sat r1.w, r1.w, r2.z
  49: min r2.y, r1.w, r2.y
  50: movc r1.w, r2.x, r2.y, r1.w
  51: dp3 r2.x, r4.xyzx, r4.xyzx
  52: sample r2.xyzw, r2.xxxx, t1.xyzw, s2
  53: mul r1.w, r1.w, r2.x
  54: mul r2.xyz, r1.wwww, cb0[2].xyzx
  55: dp3 r1.w, v1.xyzx, v1.xyzx
  56: rsq r1.w, r1.w
  57: mul r4.xyz, r1.wwww, v1.xyzx
  58: add r5.xyz, cb0[8].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
  59: mad r5.xyz, cb0[9].yyyy, r5.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
  60: mad r1.w, -cb0[9].y, l(0.960000), l(0.960000)
  61: mul r6.xyz, r1.wwww, cb0[8].xyzx
  62: add r1.w, -cb0[9].x, l(1.000000)
  63: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
  64: dp3 r0.w, r0.xyzx, r0.xyzx
  65: max r0.w, r0.w, l(0.001000)
  66: rsq r0.w, r0.w
  67: mul r0.xyz, r0.wwww, r0.xyzx
  68: dp3 r0.w, r4.xyzx, r3.xyzx
  69: dp3_sat r2.w, r4.xyzx, r1.xyzx
  70: dp3_sat r3.x, r4.xyzx, r0.xyzx
  71: dp3_sat r0.x, r1.xyzx, r0.xyzx
  72: mul r0.y, r0.x, r0.x
  73: dp2 r0.y, r0.yyyy, r1.wwww
  74: add r0.y, r0.y, l(-0.500000)
  75: add r0.z, -r2.w, l(1.000000)
  76: mul r1.x, r0.z, r0.z
  77: mul r1.x, r1.x, r1.x
  78: mul r0.z, r0.z, r1.x
  79: mad r0.z, r0.y, r0.z, l(1.000000)
  80: add r1.x, -|r0.w|, l(1.000000)
  81: mul r1.y, r1.x, r1.x
  82: mul r1.y, r1.y, r1.y
  83: mul r1.x, r1.x, r1.y
  84: mad r0.y, r0.y, r1.x, l(1.000000)
  85: mul r0.y, r0.y, r0.z
  86: mul r0.z, r1.w, r1.w
  87: mad r1.x, -r1.w, r1.w, l(1.000000)
  88: mad r1.y, |r0.w|, r1.x, r0.z
  89: mad r1.x, r2.w, r1.x, r0.z
  90: mul r0.w, |r0.w|, r1.x
  91: mad r0.w, r2.w, r1.y, r0.w
  92: add r0.w, r0.w, l(0.000010)
  93: div r0.w, l(0.500000), r0.w
  94: mul r0.z, r0.z, r0.z
  95: mad r1.x, r3.x, r0.z, -r3.x
  96: mad r1.x, r1.x, r3.x, l(1.000000)
  97: mul r0.z, r0.z, l(0.318310)
  98: mad r1.x, r1.x, r1.x, l(0.000000)
  99: div r0.z, r0.z, r1.x
 100: mul r0.z, r0.z, r0.w
 101: mul r0.z, r0.z, l(3.141593)
 102: mul r0.yz, r2.wwww, r0.yyzy
 103: max r0.z, r0.z, l(0.000000)
 104: dp3 r0.w, r5.xyzx, r5.xyzx
 105: ne r0.w, r0.w, l(0.000000)
 106: and r0.w, r0.w, l(0x3f800000)
 107: mul r0.z, r0.w, r0.z
 108: mul r1.xyz, r0.yyyy, r2.xyzx
 109: mul r0.yzw, r2.xxyz, r0.zzzz
 110: add r0.x, -r0.x, l(1.000000)
 111: mul r1.w, r0.x, r0.x
 112: mul r1.w, r1.w, r1.w
 113: mul r0.x, r0.x, r1.w
 114: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 115: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 116: mul r0.xyz, r0.yzwy, r2.xyzx
 117: mad o0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
 118: mov o0.w, l(1.000000)
 119: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT SHADOWS_CUBE SHADOWS_SOFT 
-- Vertex shader for "d3d11":
// Stats: 15 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"

Constant Buffer "UnityPerDraw" (160 bytes) on slot 0 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 1 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xy          3     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb0[1].xyzw
   1: mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb0[3].xyzw
   4: mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb1[18].xyzw
   6: mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
   8: mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
   9: dp3 r0.x, v2.xyzx, cb0[4].xyzx
  10: dp3 r0.y, v2.xyzx, cb0[5].xyzx
  11: dp3 r0.z, v2.xyzx, cb0[6].xyzx
  12: dp3 r0.w, r0.xyzx, r0.xyzx
  13: rsq r0.w, r0.w
  14: mul o1.xyz, r0.wwww, r0.xyzx
  15: mov o3.xy, l(0,0,0,0)
  16: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 111 math, 9 temp registers, 2 textures, 4 branches
Set CUBE Texture "_ShadowMapTexture" to slot 0 sampler slot 1
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (160 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _BaseColor at 128
  Float _Glossiness at 144
  Float _Metallic at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xy          3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: add r0.xyz, -v2.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v2.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: mul r4.xyz, v2.yyyy, cb0[5].xyzx
   9: mad r4.xyz, cb0[4].xyzx, v2.xxxx, r4.xyzx
  10: mad r4.xyz, cb0[6].xyzx, v2.zzzz, r4.xyzx
  11: add r4.xyz, r4.xyzx, cb0[7].xyzx
  12: mov r5.x, cb4[9].z
  13: mov r5.y, cb4[10].z
  14: mov r5.z, cb4[11].z
  15: dp3 r1.w, r2.xyzx, r5.xyzx
  16: add r2.xyz, v2.xyzx, -cb3[25].xyzx
  17: dp3 r2.x, r2.xyzx, r2.xyzx
  18: sqrt r2.x, r2.x
  19: add r2.x, -r1.w, r2.x
  20: mad r1.w, cb3[25].w, r2.x, r1.w
  21: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  22: eq r2.x, cb5[0].x, l(1.000000)
  23: if_nz r2.x
  24:   eq r2.y, cb5[0].y, l(1.000000)
  25:   mul r5.xyz, v2.yyyy, cb5[2].xyzx
  26:   mad r5.xyz, cb5[1].xyzx, v2.xxxx, r5.xyzx
  27:   mad r5.xyz, cb5[3].xyzx, v2.zzzz, r5.xyzx
  28:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  29:   movc r2.yzw, r2.yyyy, r5.xxyz, v2.xxyz
  30:   add r2.yzw, r2.yyzw, -cb5[6].xxyz
  31:   mul r5.yzw, r2.yyzw, cb5[5].xxyz
  32:   mad r2.y, r5.y, l(0.250000), l(0.750000)
  33:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
  34:   max r5.x, r2.z, r2.y
  35:   sample r5.xyzw, r5.xzwx, t2.xyzw, s0
  36: else 
  37:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  38: endif 
  39: dp4_sat r2.y, r5.xyzw, cb2[45].xyzw
  40: lt r2.z, r1.w, l(0.990000)
  41: if_nz r2.z
  42:   add r5.xyz, v2.xyzx, -cb2[1].xyzx
  43:   dp3 r2.z, r5.xyzx, r5.xyzx
  44:   sqrt r2.z, r2.z
  45:   mul r2.z, r2.z, cb2[1].w
  46:   mul r2.z, r2.z, l(0.970000)
  47:   add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
  48:   sample_l r6.xyzw, r6.xyzx, t0.xyzw, s1, l(0.000000)
  49:   add r6.yzw, r5.xxyz, l(0.000000, -0.007813, -0.007813, 0.007813)
  50:   sample_l r7.xyzw, r6.yzwy, t0.xyzw, s1, l(0.000000)
  51:   add r6.yzw, r5.xxyz, l(0.000000, -0.007813, 0.007813, -0.007813)
  52:   sample_l r8.xyzw, r6.yzwy, t0.xyzw, s1, l(0.000000)
  53:   add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
  54:   sample_l r5.xyzw, r5.xyzx, t0.yzwx, s1, l(0.000000)
  55:   mov r5.x, r6.x
  56:   mov r5.y, r7.x
  57:   mov r5.z, r8.x
  58:   lt r5.xyzw, r5.xyzw, r2.zzzz
  59:   movc r5.xyzw, r5.xyzw, cb3[24].xxxx, l(1.000000,1.000000,1.000000,1.000000)
  60:   dp4 r2.z, r5.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  61: else 
  62:   mov r2.z, l(1.000000)
  63: endif 
  64: add_sat r1.w, r1.w, r2.z
  65: min r2.y, r1.w, r2.y
  66: movc r1.w, r2.x, r2.y, r1.w
  67: dp3 r2.x, r4.xyzx, r4.xyzx
  68: sample r2.xyzw, r2.xxxx, t1.xyzw, s2
  69: mul r1.w, r1.w, r2.x
  70: mul r2.xyz, r1.wwww, cb0[2].xyzx
  71: dp3 r1.w, v1.xyzx, v1.xyzx
  72: rsq r1.w, r1.w
  73: mul r4.xyz, r1.wwww, v1.xyzx
  74: add r5.xyz, cb0[8].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
  75: mad r5.xyz, cb0[9].yyyy, r5.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
  76: mad r1.w, -cb0[9].y, l(0.960000), l(0.960000)
  77: mul r6.xyz, r1.wwww, cb0[8].xyzx
  78: add r1.w, -cb0[9].x, l(1.000000)
  79: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
  80: dp3 r0.w, r0.xyzx, r0.xyzx
  81: max r0.w, r0.w, l(0.001000)
  82: rsq r0.w, r0.w
  83: mul r0.xyz, r0.wwww, r0.xyzx
  84: dp3 r0.w, r4.xyzx, r3.xyzx
  85: dp3_sat r2.w, r4.xyzx, r1.xyzx
  86: dp3_sat r3.x, r4.xyzx, r0.xyzx
  87: dp3_sat r0.x, r1.xyzx, r0.xyzx
  88: mul r0.y, r0.x, r0.x
  89: dp2 r0.y, r0.yyyy, r1.wwww
  90: add r0.y, r0.y, l(-0.500000)
  91: add r0.z, -r2.w, l(1.000000)
  92: mul r1.x, r0.z, r0.z
  93: mul r1.x, r1.x, r1.x
  94: mul r0.z, r0.z, r1.x
  95: mad r0.z, r0.y, r0.z, l(1.000000)
  96: add r1.x, -|r0.w|, l(1.000000)
  97: mul r1.y, r1.x, r1.x
  98: mul r1.y, r1.y, r1.y
  99: mul r1.x, r1.x, r1.y
 100: mad r0.y, r0.y, r1.x, l(1.000000)
 101: mul r0.y, r0.y, r0.z
 102: mul r0.z, r1.w, r1.w
 103: mad r1.x, -r1.w, r1.w, l(1.000000)
 104: mad r1.y, |r0.w|, r1.x, r0.z
 105: mad r1.x, r2.w, r1.x, r0.z
 106: mul r0.w, |r0.w|, r1.x
 107: mad r0.w, r2.w, r1.y, r0.w
 108: add r0.w, r0.w, l(0.000010)
 109: div r0.w, l(0.500000), r0.w
 110: mul r0.z, r0.z, r0.z
 111: mad r1.x, r3.x, r0.z, -r3.x
 112: mad r1.x, r1.x, r3.x, l(1.000000)
 113: mul r0.z, r0.z, l(0.318310)
 114: mad r1.x, r1.x, r1.x, l(0.000000)
 115: div r0.z, r0.z, r1.x
 116: mul r0.z, r0.z, r0.w
 117: mul r0.z, r0.z, l(3.141593)
 118: mul r0.yz, r2.wwww, r0.yyzy
 119: max r0.z, r0.z, l(0.000000)
 120: dp3 r0.w, r5.xyzx, r5.xyzx
 121: ne r0.w, r0.w, l(0.000000)
 122: and r0.w, r0.w, l(0x3f800000)
 123: mul r0.z, r0.w, r0.z
 124: mul r1.xyz, r0.yyyy, r2.xyzx
 125: mul r0.yzw, r2.xxyz, r0.zzzz
 126: add r0.x, -r0.x, l(1.000000)
 127: mul r1.w, r0.x, r0.x
 128: mul r1.w, r1.w, r1.w
 129: mul r0.x, r0.x, r1.w
 130: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 131: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 132: mul r0.xyz, r0.yzwy, r2.xyzx
 133: mad o0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
 134: mov o0.w, l(1.000000)
 135: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 15 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"

Constant Buffer "UnityPerDraw" (160 bytes) on slot 0 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 1 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xy          3     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb0[1].xyzw
   1: mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb0[3].xyzw
   4: mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb1[18].xyzw
   6: mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
   8: mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
   9: dp3 r0.x, v2.xyzx, cb0[4].xyzx
  10: dp3 r0.y, v2.xyzx, cb0[5].xyzx
  11: dp3 r0.z, v2.xyzx, cb0[6].xyzx
  12: dp3 r0.w, r0.xyzx, r0.xyzx
  13: rsq r0.w, r0.w
  14: mul o1.xyz, r0.wwww, r0.xyzx
  15: mov o3.xy, l(0,0,0,0)
  16: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 106 math, 7 temp registers, 3 textures, 2 branches
Set CUBE Texture "_ShadowMapTexture" to slot 0 sampler slot 1
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 3
Set CUBE Texture "_LightTexture0" to slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (160 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _BaseColor at 128
  Float _Glossiness at 144
  Float _Metallic at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xy          3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, -v2.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v2.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: mul r4.xyz, v2.yyyy, cb0[5].xyzx
   9: mad r4.xyz, cb0[4].xyzx, v2.xxxx, r4.xyzx
  10: mad r4.xyz, cb0[6].xyzx, v2.zzzz, r4.xyzx
  11: add r4.xyz, r4.xyzx, cb0[7].xyzx
  12: mov r5.x, cb4[9].z
  13: mov r5.y, cb4[10].z
  14: mov r5.z, cb4[11].z
  15: dp3 r1.w, r2.xyzx, r5.xyzx
  16: add r2.xyz, v2.xyzx, -cb3[25].xyzx
  17: dp3 r2.x, r2.xyzx, r2.xyzx
  18: sqrt r2.x, r2.x
  19: add r2.x, -r1.w, r2.x
  20: mad r1.w, cb3[25].w, r2.x, r1.w
  21: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  22: eq r2.x, cb5[0].x, l(1.000000)
  23: if_nz r2.x
  24:   eq r2.y, cb5[0].y, l(1.000000)
  25:   mul r5.xyz, v2.yyyy, cb5[2].xyzx
  26:   mad r5.xyz, cb5[1].xyzx, v2.xxxx, r5.xyzx
  27:   mad r5.xyz, cb5[3].xyzx, v2.zzzz, r5.xyzx
  28:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  29:   movc r2.yzw, r2.yyyy, r5.xxyz, v2.xxyz
  30:   add r2.yzw, r2.yyzw, -cb5[6].xxyz
  31:   mul r5.yzw, r2.yyzw, cb5[5].xxyz
  32:   mad r2.y, r5.y, l(0.250000), l(0.750000)
  33:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
  34:   max r5.x, r2.z, r2.y
  35:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  36: else 
  37:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  38: endif 
  39: dp4_sat r2.y, r5.xyzw, cb2[45].xyzw
  40: add r5.xyz, v2.xyzx, -cb2[1].xyzx
  41: dp3 r2.z, r5.xyzx, r5.xyzx
  42: sqrt r2.z, r2.z
  43: mul r2.z, r2.z, cb2[1].w
  44: mul r2.z, r2.z, l(0.970000)
  45: sample_l r5.xyzw, r5.xyzx, t0.xyzw, s1, l(0.000000)
  46: lt r2.z, r5.x, r2.z
  47: movc r2.z, r2.z, cb3[24].x, l(1.000000)
  48: add_sat r1.w, r1.w, r2.z
  49: min r2.y, r1.w, r2.y
  50: movc r1.w, r2.x, r2.y, r1.w
  51: dp3 r2.x, r4.xyzx, r4.xyzx
  52: sample r2.xyzw, r2.xxxx, t1.xyzw, s3
  53: sample r4.xyzw, r4.xyzx, t2.xyzw, s2
  54: mul r2.x, r2.x, r4.w
  55: mul r1.w, r1.w, r2.x
  56: mul r2.xyz, r1.wwww, cb0[2].xyzx
  57: dp3 r1.w, v1.xyzx, v1.xyzx
  58: rsq r1.w, r1.w
  59: mul r4.xyz, r1.wwww, v1.xyzx
  60: add r5.xyz, cb0[8].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
  61: mad r5.xyz, cb0[9].yyyy, r5.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
  62: mad r1.w, -cb0[9].y, l(0.960000), l(0.960000)
  63: mul r6.xyz, r1.wwww, cb0[8].xyzx
  64: add r1.w, -cb0[9].x, l(1.000000)
  65: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
  66: dp3 r0.w, r0.xyzx, r0.xyzx
  67: max r0.w, r0.w, l(0.001000)
  68: rsq r0.w, r0.w
  69: mul r0.xyz, r0.wwww, r0.xyzx
  70: dp3 r0.w, r4.xyzx, r3.xyzx
  71: dp3_sat r2.w, r4.xyzx, r1.xyzx
  72: dp3_sat r3.x, r4.xyzx, r0.xyzx
  73: dp3_sat r0.x, r1.xyzx, r0.xyzx
  74: mul r0.y, r0.x, r0.x
  75: dp2 r0.y, r0.yyyy, r1.wwww
  76: add r0.y, r0.y, l(-0.500000)
  77: add r0.z, -r2.w, l(1.000000)
  78: mul r1.x, r0.z, r0.z
  79: mul r1.x, r1.x, r1.x
  80: mul r0.z, r0.z, r1.x
  81: mad r0.z, r0.y, r0.z, l(1.000000)
  82: add r1.x, -|r0.w|, l(1.000000)
  83: mul r1.y, r1.x, r1.x
  84: mul r1.y, r1.y, r1.y
  85: mul r1.x, r1.x, r1.y
  86: mad r0.y, r0.y, r1.x, l(1.000000)
  87: mul r0.y, r0.y, r0.z
  88: mul r0.z, r1.w, r1.w
  89: mad r1.x, -r1.w, r1.w, l(1.000000)
  90: mad r1.y, |r0.w|, r1.x, r0.z
  91: mad r1.x, r2.w, r1.x, r0.z
  92: mul r0.w, |r0.w|, r1.x
  93: mad r0.w, r2.w, r1.y, r0.w
  94: add r0.w, r0.w, l(0.000010)
  95: div r0.w, l(0.500000), r0.w
  96: mul r0.z, r0.z, r0.z
  97: mad r1.x, r3.x, r0.z, -r3.x
  98: mad r1.x, r1.x, r3.x, l(1.000000)
  99: mul r0.z, r0.z, l(0.318310)
 100: mad r1.x, r1.x, r1.x, l(0.000000)
 101: div r0.z, r0.z, r1.x
 102: mul r0.z, r0.z, r0.w
 103: mul r0.z, r0.z, l(3.141593)
 104: mul r0.yz, r2.wwww, r0.yyzy
 105: max r0.z, r0.z, l(0.000000)
 106: dp3 r0.w, r5.xyzx, r5.xyzx
 107: ne r0.w, r0.w, l(0.000000)
 108: and r0.w, r0.w, l(0x3f800000)
 109: mul r0.z, r0.w, r0.z
 110: mul r1.xyz, r0.yyyy, r2.xyzx
 111: mul r0.yzw, r2.xxyz, r0.zzzz
 112: add r0.x, -r0.x, l(1.000000)
 113: mul r1.w, r0.x, r0.x
 114: mul r1.w, r1.w, r1.w
 115: mul r0.x, r0.x, r1.w
 116: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 117: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 118: mul r0.xyz, r0.yzwy, r2.xyzx
 119: mad o0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
 120: mov o0.w, l(1.000000)
 121: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT_COOKIE SHADOWS_CUBE SHADOWS_SOFT 
-- Vertex shader for "d3d11":
// Stats: 15 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"

Constant Buffer "UnityPerDraw" (160 bytes) on slot 0 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 1 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xy          3     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb0[1].xyzw
   1: mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb0[3].xyzw
   4: mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb1[18].xyzw
   6: mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
   8: mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
   9: dp3 r0.x, v2.xyzx, cb0[4].xyzx
  10: dp3 r0.y, v2.xyzx, cb0[5].xyzx
  11: dp3 r0.z, v2.xyzx, cb0[6].xyzx
  12: dp3 r0.w, r0.xyzx, r0.xyzx
  13: rsq r0.w, r0.w
  14: mul o1.xyz, r0.wwww, r0.xyzx
  15: mov o3.xy, l(0,0,0,0)
  16: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 112 math, 9 temp registers, 3 textures, 4 branches
Set CUBE Texture "_ShadowMapTexture" to slot 0 sampler slot 1
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 3
Set CUBE Texture "_LightTexture0" to slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (160 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _BaseColor at 128
  Float _Glossiness at 144
  Float _Metallic at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xy          3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: add r0.xyz, -v2.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v2.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: mul r4.xyz, v2.yyyy, cb0[5].xyzx
   9: mad r4.xyz, cb0[4].xyzx, v2.xxxx, r4.xyzx
  10: mad r4.xyz, cb0[6].xyzx, v2.zzzz, r4.xyzx
  11: add r4.xyz, r4.xyzx, cb0[7].xyzx
  12: mov r5.x, cb4[9].z
  13: mov r5.y, cb4[10].z
  14: mov r5.z, cb4[11].z
  15: dp3 r1.w, r2.xyzx, r5.xyzx
  16: add r2.xyz, v2.xyzx, -cb3[25].xyzx
  17: dp3 r2.x, r2.xyzx, r2.xyzx
  18: sqrt r2.x, r2.x
  19: add r2.x, -r1.w, r2.x
  20: mad r1.w, cb3[25].w, r2.x, r1.w
  21: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  22: eq r2.x, cb5[0].x, l(1.000000)
  23: if_nz r2.x
  24:   eq r2.y, cb5[0].y, l(1.000000)
  25:   mul r5.xyz, v2.yyyy, cb5[2].xyzx
  26:   mad r5.xyz, cb5[1].xyzx, v2.xxxx, r5.xyzx
  27:   mad r5.xyz, cb5[3].xyzx, v2.zzzz, r5.xyzx
  28:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  29:   movc r2.yzw, r2.yyyy, r5.xxyz, v2.xxyz
  30:   add r2.yzw, r2.yyzw, -cb5[6].xxyz
  31:   mul r5.yzw, r2.yyzw, cb5[5].xxyz
  32:   mad r2.y, r5.y, l(0.250000), l(0.750000)
  33:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
  34:   max r5.x, r2.z, r2.y
  35:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  36: else 
  37:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  38: endif 
  39: dp4_sat r2.y, r5.xyzw, cb2[45].xyzw
  40: lt r2.z, r1.w, l(0.990000)
  41: if_nz r2.z
  42:   add r5.xyz, v2.xyzx, -cb2[1].xyzx
  43:   dp3 r2.z, r5.xyzx, r5.xyzx
  44:   sqrt r2.z, r2.z
  45:   mul r2.z, r2.z, cb2[1].w
  46:   mul r2.z, r2.z, l(0.970000)
  47:   add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
  48:   sample_l r6.xyzw, r6.xyzx, t0.xyzw, s1, l(0.000000)
  49:   add r6.yzw, r5.xxyz, l(0.000000, -0.007813, -0.007813, 0.007813)
  50:   sample_l r7.xyzw, r6.yzwy, t0.xyzw, s1, l(0.000000)
  51:   add r6.yzw, r5.xxyz, l(0.000000, -0.007813, 0.007813, -0.007813)
  52:   sample_l r8.xyzw, r6.yzwy, t0.xyzw, s1, l(0.000000)
  53:   add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
  54:   sample_l r5.xyzw, r5.xyzx, t0.yzwx, s1, l(0.000000)
  55:   mov r5.x, r6.x
  56:   mov r5.y, r7.x
  57:   mov r5.z, r8.x
  58:   lt r5.xyzw, r5.xyzw, r2.zzzz
  59:   movc r5.xyzw, r5.xyzw, cb3[24].xxxx, l(1.000000,1.000000,1.000000,1.000000)
  60:   dp4 r2.z, r5.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  61: else 
  62:   mov r2.z, l(1.000000)
  63: endif 
  64: add_sat r1.w, r1.w, r2.z
  65: min r2.y, r1.w, r2.y
  66: movc r1.w, r2.x, r2.y, r1.w
  67: dp3 r2.x, r4.xyzx, r4.xyzx
  68: sample r2.xyzw, r2.xxxx, t1.xyzw, s3
  69: sample r4.xyzw, r4.xyzx, t2.xyzw, s2
  70: mul r2.x, r2.x, r4.w
  71: mul r1.w, r1.w, r2.x
  72: mul r2.xyz, r1.wwww, cb0[2].xyzx
  73: dp3 r1.w, v1.xyzx, v1.xyzx
  74: rsq r1.w, r1.w
  75: mul r4.xyz, r1.wwww, v1.xyzx
  76: add r5.xyz, cb0[8].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
  77: mad r5.xyz, cb0[9].yyyy, r5.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
  78: mad r1.w, -cb0[9].y, l(0.960000), l(0.960000)
  79: mul r6.xyz, r1.wwww, cb0[8].xyzx
  80: add r1.w, -cb0[9].x, l(1.000000)
  81: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
  82: dp3 r0.w, r0.xyzx, r0.xyzx
  83: max r0.w, r0.w, l(0.001000)
  84: rsq r0.w, r0.w
  85: mul r0.xyz, r0.wwww, r0.xyzx
  86: dp3 r0.w, r4.xyzx, r3.xyzx
  87: dp3_sat r2.w, r4.xyzx, r1.xyzx
  88: dp3_sat r3.x, r4.xyzx, r0.xyzx
  89: dp3_sat r0.x, r1.xyzx, r0.xyzx
  90: mul r0.y, r0.x, r0.x
  91: dp2 r0.y, r0.yyyy, r1.wwww
  92: add r0.y, r0.y, l(-0.500000)
  93: add r0.z, -r2.w, l(1.000000)
  94: mul r1.x, r0.z, r0.z
  95: mul r1.x, r1.x, r1.x
  96: mul r0.z, r0.z, r1.x
  97: mad r0.z, r0.y, r0.z, l(1.000000)
  98: add r1.x, -|r0.w|, l(1.000000)
  99: mul r1.y, r1.x, r1.x
 100: mul r1.y, r1.y, r1.y
 101: mul r1.x, r1.x, r1.y
 102: mad r0.y, r0.y, r1.x, l(1.000000)
 103: mul r0.y, r0.y, r0.z
 104: mul r0.z, r1.w, r1.w
 105: mad r1.x, -r1.w, r1.w, l(1.000000)
 106: mad r1.y, |r0.w|, r1.x, r0.z
 107: mad r1.x, r2.w, r1.x, r0.z
 108: mul r0.w, |r0.w|, r1.x
 109: mad r0.w, r2.w, r1.y, r0.w
 110: add r0.w, r0.w, l(0.000010)
 111: div r0.w, l(0.500000), r0.w
 112: mul r0.z, r0.z, r0.z
 113: mad r1.x, r3.x, r0.z, -r3.x
 114: mad r1.x, r1.x, r3.x, l(1.000000)
 115: mul r0.z, r0.z, l(0.318310)
 116: mad r1.x, r1.x, r1.x, l(0.000000)
 117: div r0.z, r0.z, r1.x
 118: mul r0.z, r0.z, r0.w
 119: mul r0.z, r0.z, l(3.141593)
 120: mul r0.yz, r2.wwww, r0.yyzy
 121: max r0.z, r0.z, l(0.000000)
 122: dp3 r0.w, r5.xyzx, r5.xyzx
 123: ne r0.w, r0.w, l(0.000000)
 124: and r0.w, r0.w, l(0x3f800000)
 125: mul r0.z, r0.w, r0.z
 126: mul r1.xyz, r0.yyyy, r2.xyzx
 127: mul r0.yzw, r2.xxyz, r0.zzzz
 128: add r0.x, -r0.x, l(1.000000)
 129: mul r1.w, r0.x, r0.x
 130: mul r1.w, r1.w, r1.w
 131: mul r0.x, r0.x, r1.w
 132: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 133: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 134: mul r0.xyz, r0.yzwy, r2.xyzx
 135: mad o0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
 136: mov o0.w, l(1.000000)
 137: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //        d3d11: 23 avg math (22..24)
 // Stats for Fragment shader:
 //        d3d11: 20 avg math (11..30), 2 avg texture (1..3), 1 avg branch (0..2)
 Pass {
  Name "DEFERRED"
  Tags { "LIGHTMODE"="DEFERRED" "RenderType"="Opaque" }
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
No keywords set in this variant.
-- Vertex shader for "d3d11":
// Stats: 22 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"

Constant Buffer "UnityLighting" (752 bytes) on slot 0 {
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyz         4     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[45], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb2[18].xyzw
   6: mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
   8: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
   9: dp3 r0.x, v2.xyzx, cb1[4].xyzx
  10: dp3 r0.y, v2.xyzx, cb1[5].xyzx
  11: dp3 r0.z, v2.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r0.xyzx, r0.xyzx
  13: rsq r0.w, r0.w
  14: mul r0.xyz, r0.wwww, r0.xyzx
  15: mov o1.xyz, r0.xyzx
  16: mov o3.xyzw, l(0,0,0,0)
  17: mul r0.w, r0.y, r0.y
  18: mad r0.w, r0.x, r0.x, -r0.w
  19: mul r1.xyzw, r0.yzzx, r0.xyzz
  20: dp4 r0.x, cb0[41].xyzw, r1.xyzw
  21: dp4 r0.y, cb0[42].xyzw, r1.xyzw
  22: dp4 r0.z, cb0[43].xyzw, r1.xyzw
  23: mad o4.xyz, cb0[44].xyzx, r0.wwww, r0.xyzx
  24: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 30 math, 4 temp registers, 3 textures, 2 branches
Set 3D Texture "unity_ProbeVolumeSH" to slot 0

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _BaseColor at 64
  Float _Glossiness at 80
  Float _Metallic at 84
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 3   xyzw        3     NONE   float       
// TEXCOORD                 4   xyz         4     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[41], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture3d (float,float,float,float) t0
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 4
   0: eq r0.x, cb2[0].x, l(1.000000)
   1: if_nz r0.x
   2:   eq r0.x, cb2[0].y, l(1.000000)
   3:   mul r0.yzw, v2.yyyy, cb2[2].xxyz
   4:   mad r0.yzw, cb2[1].xxyz, v2.xxxx, r0.yyzw
   5:   mad r0.yzw, cb2[3].xxyz, v2.zzzz, r0.yyzw
   6:   add r0.yzw, r0.yyzw, cb2[4].xxyz
   7:   movc r0.xyz, r0.xxxx, r0.yzwy, v2.xyzx
   8:   add r0.xyz, r0.xyzx, -cb2[6].xyzx
   9:   mul r0.yzw, r0.xxyz, cb2[5].xxyz
  10:   mul r0.y, r0.y, l(0.250000)
  11:   mul r1.x, cb2[0].z, l(0.500000)
  12:   mad r1.y, -cb2[0].z, l(0.500000), l(0.250000)
  13:   max r0.y, r0.y, r1.x
  14:   min r0.x, r1.y, r0.y
  15:   sample r1.xyzw, r0.xzwx, t0.xyzw, s0
  16:   add r2.xyz, r0.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  17:   sample r2.xyzw, r2.xyzx, t0.xyzw, s0
  18:   add r0.xyz, r0.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  19:   sample r0.xyzw, r0.xyzx, t0.xyzw, s0
  20:   mov r3.xyz, v1.xyzx
  21:   mov r3.w, l(1.000000)
  22:   dp4 r1.x, r1.xyzw, r3.xyzw
  23:   dp4 r1.y, r2.xyzw, r3.xyzw
  24:   dp4 r1.z, r0.xyzw, r3.xyzw
  25: else 
  26:   mov r0.xyz, v1.xyzx
  27:   mov r0.w, l(1.000000)
  28:   dp4 r1.x, cb1[38].xyzw, r0.xyzw
  29:   dp4 r1.y, cb1[39].xyzw, r0.xyzw
  30:   dp4 r1.z, cb1[40].xyzw, r0.xyzw
  31: endif 
  32: add r0.xyz, r1.xyzx, v4.xyzx
  33: max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  34: add r1.xyz, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
  35: mad o1.xyz, cb0[5].yyyy, r1.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
  36: mad r0.w, -cb0[5].y, l(0.960000), l(0.960000)
  37: mul r1.xyz, r0.wwww, cb0[4].xyzx
  38: mul r0.xyz, r0.xyzx, r1.xyzx
  39: exp o3.xyz, -r0.xyzx
  40: mov o0.xyz, r1.xyzx
  41: mov o0.w, l(1.000000)
  42: mov o1.w, cb0[5].x
  43: mad o2.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  44: mov o2.w, l(1.000000)
  45: mov o3.w, l(1.000000)
  46: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: LIGHTMAP_ON 
-- Vertex shader for "d3d11":
// Stats: 24 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord0"

Constant Buffer "UnityShadows" (416 bytes) on slot 0 {
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 2 {
  Matrix4x4 unity_MatrixV at 144
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 3 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[26], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
   5: mul r2.xyzw, r1.yyyy, cb2[18].xyzw
   6: mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
   9: dp3 r2.x, v2.xyzx, cb1[4].xyzx
  10: dp3 r2.y, v2.xyzx, cb1[5].xyzx
  11: dp3 r2.z, v2.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r2.xyzx, r2.xyzx
  13: rsq r0.w, r0.w
  14: mul o1.xyz, r0.wwww, r2.xyzx
  15: mov o2.xyz, r0.xyzx
  16: add r0.xyz, r0.xyzx, -cb0[25].xyzx
  17: mul o4.xyz, r0.xyzx, cb0[25].wwww
  18: mad o3.xy, v4.xyxx, cb3[0].xyxx, cb3[0].zwzz
  19: mov o3.zw, l(0,0,0,0)
  20: mul r0.x, r1.y, cb2[10].z
  21: mad r0.x, cb2[9].z, r1.x, r0.x
  22: mad r0.x, cb2[11].z, r1.z, r0.x
  23: mad r0.x, cb2[12].z, r1.w, r0.x
  24: add r0.y, -cb0[25].w, l(1.000000)
  25: mul o4.w, r0.y, -r0.x
  26: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 12 math, 2 temp registers, 1 textures
Set 2D Texture "unity_Lightmap" to slot 0

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Vector4 unity_Lightmap_HDR at 0
  Vector4 _BaseColor at 64
  Float _Glossiness at 80
  Float _Metallic at 84
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 3   xyzw        3     NONE   float   xy  
// TEXCOORD                 4   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v3.xy
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: mad r0.x, -cb0[5].y, l(0.960000), l(0.960000)
   1: mul r0.xyz, r0.xxxx, cb0[4].xyzx
   2: mov o0.xyz, r0.xyzx
   3: mov o0.w, l(1.000000)
   4: add r1.xyz, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
   5: mad o1.xyz, cb0[5].yyyy, r1.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
   6: mov o1.w, cb0[5].x
   7: mad o2.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
   8: mov o2.w, l(1.000000)
   9: sample r1.xyzw, v3.xyxx, t0.xyzw, s0
  10: log r0.w, r1.w
  11: mul r0.w, r0.w, cb0[0].y
  12: exp r0.w, r0.w
  13: mul r0.w, r0.w, cb0[0].x
  14: mul r1.xyz, r1.xyzx, r0.wwww
  15: mul r0.xyz, r0.xyzx, r1.xyzx
  16: exp o3.xyz, -r0.xyzx
  17: mov o3.w, l(1.000000)
  18: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: UNITY_HDR_ON 
-- Vertex shader for "d3d11":
// Stats: 22 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"

Constant Buffer "UnityLighting" (752 bytes) on slot 0 {
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyz         4     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[45], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb2[18].xyzw
   6: mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
   8: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
   9: dp3 r0.x, v2.xyzx, cb1[4].xyzx
  10: dp3 r0.y, v2.xyzx, cb1[5].xyzx
  11: dp3 r0.z, v2.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r0.xyzx, r0.xyzx
  13: rsq r0.w, r0.w
  14: mul r0.xyz, r0.wwww, r0.xyzx
  15: mov o1.xyz, r0.xyzx
  16: mov o3.xyzw, l(0,0,0,0)
  17: mul r0.w, r0.y, r0.y
  18: mad r0.w, r0.x, r0.x, -r0.w
  19: mul r1.xyzw, r0.yzzx, r0.xyzz
  20: dp4 r0.x, cb0[41].xyzw, r1.xyzw
  21: dp4 r0.y, cb0[42].xyzw, r1.xyzw
  22: dp4 r0.z, cb0[43].xyzw, r1.xyzw
  23: mad o4.xyz, cb0[44].xyzx, r0.wwww, r0.xyzx
  24: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 29 math, 4 temp registers, 3 textures, 2 branches
Set 3D Texture "unity_ProbeVolumeSH" to slot 0

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _BaseColor at 64
  Float _Glossiness at 80
  Float _Metallic at 84
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 3   xyzw        3     NONE   float       
// TEXCOORD                 4   xyz         4     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[41], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture3d (float,float,float,float) t0
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 4
   0: eq r0.x, cb2[0].x, l(1.000000)
   1: if_nz r0.x
   2:   eq r0.x, cb2[0].y, l(1.000000)
   3:   mul r0.yzw, v2.yyyy, cb2[2].xxyz
   4:   mad r0.yzw, cb2[1].xxyz, v2.xxxx, r0.yyzw
   5:   mad r0.yzw, cb2[3].xxyz, v2.zzzz, r0.yyzw
   6:   add r0.yzw, r0.yyzw, cb2[4].xxyz
   7:   movc r0.xyz, r0.xxxx, r0.yzwy, v2.xyzx
   8:   add r0.xyz, r0.xyzx, -cb2[6].xyzx
   9:   mul r0.yzw, r0.xxyz, cb2[5].xxyz
  10:   mul r0.y, r0.y, l(0.250000)
  11:   mul r1.x, cb2[0].z, l(0.500000)
  12:   mad r1.y, -cb2[0].z, l(0.500000), l(0.250000)
  13:   max r0.y, r0.y, r1.x
  14:   min r0.x, r1.y, r0.y
  15:   sample r1.xyzw, r0.xzwx, t0.xyzw, s0
  16:   add r2.xyz, r0.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  17:   sample r2.xyzw, r2.xyzx, t0.xyzw, s0
  18:   add r0.xyz, r0.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  19:   sample r0.xyzw, r0.xyzx, t0.xyzw, s0
  20:   mov r3.xyz, v1.xyzx
  21:   mov r3.w, l(1.000000)
  22:   dp4 r1.x, r1.xyzw, r3.xyzw
  23:   dp4 r1.y, r2.xyzw, r3.xyzw
  24:   dp4 r1.z, r0.xyzw, r3.xyzw
  25: else 
  26:   mov r0.xyz, v1.xyzx
  27:   mov r0.w, l(1.000000)
  28:   dp4 r1.x, cb1[38].xyzw, r0.xyzw
  29:   dp4 r1.y, cb1[39].xyzw, r0.xyzw
  30:   dp4 r1.z, cb1[40].xyzw, r0.xyzw
  31: endif 
  32: add r0.xyz, r1.xyzx, v4.xyzx
  33: max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  34: add r1.xyz, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
  35: mad o1.xyz, cb0[5].yyyy, r1.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
  36: mad r0.w, -cb0[5].y, l(0.960000), l(0.960000)
  37: mul r1.xyz, r0.wwww, cb0[4].xyzx
  38: mul o3.xyz, r0.xyzx, r1.xyzx
  39: mov o0.xyz, r1.xyzx
  40: mov o0.w, l(1.000000)
  41: mov o1.w, cb0[5].x
  42: mad o2.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  43: mov o2.w, l(1.000000)
  44: mov o3.w, l(1.000000)
  45: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: LIGHTMAP_ON UNITY_HDR_ON 
-- Vertex shader for "d3d11":
// Stats: 24 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord0"

Constant Buffer "UnityShadows" (416 bytes) on slot 0 {
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 2 {
  Matrix4x4 unity_MatrixV at 144
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 3 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[26], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
   5: mul r2.xyzw, r1.yyyy, cb2[18].xyzw
   6: mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
   9: dp3 r2.x, v2.xyzx, cb1[4].xyzx
  10: dp3 r2.y, v2.xyzx, cb1[5].xyzx
  11: dp3 r2.z, v2.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r2.xyzx, r2.xyzx
  13: rsq r0.w, r0.w
  14: mul o1.xyz, r0.wwww, r2.xyzx
  15: mov o2.xyz, r0.xyzx
  16: add r0.xyz, r0.xyzx, -cb0[25].xyzx
  17: mul o4.xyz, r0.xyzx, cb0[25].wwww
  18: mad o3.xy, v4.xyxx, cb3[0].xyxx, cb3[0].zwzz
  19: mov o3.zw, l(0,0,0,0)
  20: mul r0.x, r1.y, cb2[10].z
  21: mad r0.x, cb2[9].z, r1.x, r0.x
  22: mad r0.x, cb2[11].z, r1.z, r0.x
  23: mad r0.x, cb2[12].z, r1.w, r0.x
  24: add r0.y, -cb0[25].w, l(1.000000)
  25: mul o4.w, r0.y, -r0.x
  26: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 11 math, 2 temp registers, 1 textures
Set 2D Texture "unity_Lightmap" to slot 0

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Vector4 unity_Lightmap_HDR at 0
  Vector4 _BaseColor at 64
  Float _Glossiness at 80
  Float _Metallic at 84
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 3   xyzw        3     NONE   float   xy  
// TEXCOORD                 4   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v3.xy
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: mad r0.x, -cb0[5].y, l(0.960000), l(0.960000)
   1: mul r0.xyz, r0.xxxx, cb0[4].xyzx
   2: mov o0.xyz, r0.xyzx
   3: mov o0.w, l(1.000000)
   4: add r1.xyz, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
   5: mad o1.xyz, cb0[5].yyyy, r1.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
   6: mov o1.w, cb0[5].x
   7: mad o2.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
   8: mov o2.w, l(1.000000)
   9: sample r1.xyzw, v3.xyxx, t0.xyzw, s0
  10: log r0.w, r1.w
  11: mul r0.w, r0.w, cb0[0].y
  12: exp r0.w, r0.w
  13: mul r0.w, r0.w, cb0[0].x
  14: mul r1.xyz, r1.xyzx, r0.wwww
  15: mul o3.xyz, r0.xyzx, r1.xyzx
  16: mov o3.w, l(1.000000)
  17: ret 
// Approximately 0 instruction slots used


 }
}
Fallback "Diffuse"
}